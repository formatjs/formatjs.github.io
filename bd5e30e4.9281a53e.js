(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{103:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(116)),s=a(120),o=a(121),l={id:"intl",title:"Core FormatJS Intl"},c={unversionedId:"intl",id:"intl",isDocsHomePage:!1,title:"Core FormatJS Intl",description:"This library contains core intl API that is used by react-intl.",source:"@site/docs/intl.md",slug:"/intl",permalink:"/docs/intl",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/intl.md",version:"current",sidebar:"api",previous:{title:"Upgrade Guide (v1 -> v2)",permalink:"/docs/react-intl/upgrade-guide-2x"},next:{title:"Vue Plugin for formatjs",permalink:"/docs/vue-intl"}},b=[{value:"Installation",id:"installation",children:[]},{value:"The <code>intl</code> object",id:"the-intl-object",children:[]},{value:"createIntl",id:"createintl",children:[]},{value:"IntlShape",id:"intlshape",children:[{value:"locale, formats, and messages",id:"locale-formats-and-messages",children:[]},{value:"defaultLocale and defaultFormats",id:"defaultlocale-and-defaultformats",children:[]},{value:"onError",id:"onerror",children:[]},{value:"defaultRichTextElements",id:"defaultrichtextelements",children:[]}]},{value:"formatDate",id:"formatdate",children:[]},{value:"formatTime",id:"formattime",children:[]},{value:"formatRelativeTime",id:"formatrelativetime",children:[]},{value:"formatNumber",id:"formatnumber",children:[]},{value:"formatPlural",id:"formatplural",children:[]},{value:"formatList",id:"formatlist",children:[]},{value:"formatDisplayName",id:"formatdisplayname",children:[]},{value:"formatMessage",id:"formatmessage",children:[{value:"Message Syntax",id:"message-syntax",children:[]},{value:"Message Descriptor",id:"message-descriptor",children:[]},{value:"Message Formatting Fallbacks",id:"message-formatting-fallbacks",children:[]},{value:"Usage",id:"usage",children:[]}]},{value:"defineMessages/defineMessage",id:"definemessagesdefinemessage",children:[]}],m={rightToc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This library contains core intl API that is used by ",Object(i.b)("inlineCode",{parentName:"p"},"react-intl"),"."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(s.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"npm i -S @formatjs/intl\n"))),Object(i.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"yarn add -S @formatjs/intl\n")))),Object(i.b)("h2",{id:"the-intl-object"},"The ",Object(i.b)("inlineCode",{parentName:"h2"},"intl")," object"),Object(i.b)("p",null,"The core of ",Object(i.b)("inlineCode",{parentName:"p"},"@formatjs/intl")," is the ",Object(i.b)("inlineCode",{parentName:"p"},"intl")," object (of type ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#intlshape"}),Object(i.b)("inlineCode",{parentName:"a"},"IntlShape")),"), which is the instance to store a cache of all ",Object(i.b)("inlineCode",{parentName:"p"},"Intl.*")," APIs, configurations, compiled messages and such. The lifecycle of the ",Object(i.b)("inlineCode",{parentName:"p"},"intl")," object is typically tied to the ",Object(i.b)("inlineCode",{parentName:"p"},"locale")," & the list of ",Object(i.b)("inlineCode",{parentName:"p"},"messages")," that it contains, which means when you switch ",Object(i.b)("inlineCode",{parentName:"p"},"locale"),", this object should be recreated."),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"intl")," object should be reused as much as possible for performance."))),Object(i.b)("h2",{id:"createintl"},"createIntl"),Object(i.b)("p",null,"This allows you to create an ",Object(i.b)("inlineCode",{parentName:"p"},"IntlShape")," object that contains all ",Object(i.b)("inlineCode",{parentName:"p"},"format*")," methods. For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"import {createIntl, createIntlCache} from '@formatjs/intl'\n\n// This is optional but highly recommended\n// since it prevents memory leak\nconst cache = createIntlCache()\n\nconst intl = createIntl(\n  {\n    locale: 'fr-FR',\n    messages: {},\n  },\n  cache\n)\n\n// Call imperatively\nintl.formatNumber(20)\n")),Object(i.b)("h2",{id:"intlshape"},"IntlShape"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface IntlConfig {\n  locale: string\n  timeZone?: string\n  formats: CustomFormats\n  messages: Record<string, string> | Record<string, MessageFormatElement[]>\n  defaultLocale: string\n  defaultRichTextElements?: Record<string, FormatXMLElementFn<React.ReactNode>>\n  defaultFormats: CustomFormats\n  onError(err: string): void\n}\n\ninterface IntlFormatters {\n  formatDate(value: number | Date | string, opts?: FormatDateOptions): string\n  formatTime(value: number | Date | string, opts?: FormatDateOptions): string\n  formatDateToParts(\n    value: number | Date | string,\n    opts?: FormatDateOptions\n  ): Intl.DateTimeFormatPart[]\n  formatTimeToParts(\n    value: number | Date | string,\n    opts?: FormatDateOptions\n  ): Intl.DateTimeFormatPart[]\n  formatRelativeTime(\n    value: number,\n    unit?: FormattableUnit,\n    opts?: FormatRelativeTimeOptions\n  ): string\n  formatNumber(value: number, opts?: FormatNumberOptions): string\n  formatNumberToParts(\n    value: number,\n    opts?: FormatNumberOptions\n  ): Intl.NumberFormatPart[]\n  formatPlural(\n    value: number | string,\n    opts?: FormatPluralOptions\n  ): ReturnType<Intl.PluralRules['select']>\n  formatMessage(\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>\n  ): string\n  formatMessage(\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType | T | FormatXMLElementFn<T, R>>\n  ): R\n  formatList(values: Array<string>, opts?: FormatListOptions): string\n  formatList(\n    values: Array<string | T>,\n    opts?: FormatListOptions\n  ): T | string | Array<string | T>\n  formatDisplayName(\n    value: string,\n    opts?: FormatDisplayNameOptions\n  ): string | undefined\n}\n\ntype IntlShape = IntlConfig & IntlFormatters\n")),Object(i.b)("p",null,"The definition above shows what the ",Object(i.b)("inlineCode",{parentName:"p"},"intl")," object will look like. It's made up of two parts:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"IntlConfig"),":")," The intl metadata passed as props into the parent ",Object(i.b)("inlineCode",{parentName:"li"},"<IntlProvider>"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"IntlFormatters"),":")," The imperative formatting API described below.")),Object(i.b)("h3",{id:"locale-formats-and-messages"},"locale, formats, and messages"),Object(i.b)("p",null,"The user's current locale and what the app should be rendered in. While ",Object(i.b)("inlineCode",{parentName:"p"},"defaultLocale")," and ",Object(i.b)("inlineCode",{parentName:"p"},"defaultFormats")," are for fallbacks or during development and represent the app's default. Notice how there is no ",Object(i.b)("inlineCode",{parentName:"p"},"defaultMessages"),", that's because each ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#message-descriptor"}),"Message Descriptor")," provides a ",Object(i.b)("inlineCode",{parentName:"p"},"defaultMessage"),"."),Object(i.b)("h3",{id:"defaultlocale-and-defaultformats"},"defaultLocale and defaultFormats"),Object(i.b)("p",null,"Default locale & formats for when a message is not translated (missing from ",Object(i.b)("inlineCode",{parentName:"p"},"messages"),"). ",Object(i.b)("inlineCode",{parentName:"p"},"defaultLocale")," should be the locale that ",Object(i.b)("inlineCode",{parentName:"p"},"defaultMessage"),"s are declared in so that a sentence is coherent in a single locale. Without ",Object(i.b)("inlineCode",{parentName:"p"},"defaultLocale")," and/or if it's set incorrectly, you might run into scenario where a sentence is in English but embeded date/time is in Spanish."),Object(i.b)("h3",{id:"onerror"},"onError"),Object(i.b)("p",null,"Allows the user to provide a custom error handler. By default, error messages are logged using ",Object(i.b)("inlineCode",{parentName:"p"},"console.error")," if ",Object(i.b)("inlineCode",{parentName:"p"},"NODE_ENV")," is not set to ",Object(i.b)("inlineCode",{parentName:"p"},"production"),"."),Object(i.b)("h3",{id:"defaultrichtextelements"},"defaultRichTextElements"),Object(i.b)("p",null,"A map of tag to rich text formatting function. This is meant to provide a centralized way to format common tags such as ",Object(i.b)("inlineCode",{parentName:"p"},"<b>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<p>"),"... or enforcing certain Design System in the codebase (e.g standardized ",Object(i.b)("inlineCode",{parentName:"p"},"<a>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"<button>"),"...). See ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/formatjs/formatjs/issues/1752"}),"https://github.com/formatjs/formatjs/issues/1752")," for more context."),Object(i.b)("h2",{id:"formatdate"},"formatDate"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"function formatDate(\n  value: number | Date,\n  options?: Intl.DateTimeFormatOptions & {format?: string}\n): string\n")),Object(i.b)("p",null,"This function will return a formatted date string. It expects a ",Object(i.b)("inlineCode",{parentName:"p"},"value")," which can be parsed as a date (i.e., ",Object(i.b)("inlineCode",{parentName:"p"},"isFinite(new Date(value))"),"), and accepts ",Object(i.b)("inlineCode",{parentName:"p"},"options")," that conform to ",Object(i.b)("inlineCode",{parentName:"p"},"DateTimeFormatOptions"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"intl.formatDate(Date.now(), {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n})\n")),Object(i.b)("h2",{id:"formattime"},"formatTime"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"function formatTime(\n  value: number | Date,\n  options?: Intl.DateTimeFormatOptions & {format?: string}\n): string\n")),Object(i.b)("p",null,"This function will return a formatted date string, but it differs from ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#formatdate"}),Object(i.b)("inlineCode",{parentName:"a"},"formatDate"))," by having the following default options:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"{\n    hour: 'numeric',\n    minute: 'numeric',\n}\n")),Object(i.b)("p",null,"It expects a ",Object(i.b)("inlineCode",{parentName:"p"},"value")," which can be parsed as a date (i.e., ",Object(i.b)("inlineCode",{parentName:"p"},"isFinite(new Date(value))"),"), and accepts ",Object(i.b)("inlineCode",{parentName:"p"},"options")," that conform to ",Object(i.b)("inlineCode",{parentName:"p"},"DateTimeFormatOptions"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),'intl.formatTime(Date.now()) // "4:03 PM"\n')),Object(i.b)("h2",{id:"formatrelativetime"},"formatRelativeTime"),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"browser support")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This requires ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat"}),"Intl.RelativeTimeFormat")," which has limited browser support. Please use our ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-relativetimeformat"}),"polyfill")," if you plan to support them."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"type Unit =\n  | 'second'\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'quarter'\n  | 'year'\n\ntype RelativeTimeFormatOptions = {\n  numeric?: 'always' | 'auto'\n  style?: 'long' | 'short' | 'narrow'\n}\n\nfunction formatRelativeTime(\n  value: number,\n  unit: Unit,\n  options?: Intl.RelativeTimeFormatOptions & {\n    format?: string\n  }\n): string\n")),Object(i.b)("p",null,'This function will return a formatted relative time string (e.g., "1 hour ago"). It expects a ',Object(i.b)("inlineCode",{parentName:"p"},"value")," which is a number, a ",Object(i.b)("inlineCode",{parentName:"p"},"unit")," and ",Object(i.b)("inlineCode",{parentName:"p"},"options")," that conform to ",Object(i.b)("inlineCode",{parentName:"p"},"Intl.RelativeTimeFormatOptions"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatRelativeTime(0)\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatRelativeTime(-24, 'hour', {style: 'narrow'})\n")),Object(i.b)("h2",{id:"formatnumber"},"formatNumber"),Object(i.b)("p",null,"This function uses ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat"}),Object(i.b)("inlineCode",{parentName:"a"},"Intl.NumberFormat"))," options."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"function formatNumber(\n  value: number,\n  options?: Intl.NumberFormatOptions & {format?: string}\n): string\n")),Object(i.b)("p",null,"This function will return a formatted number string. It expects a ",Object(i.b)("inlineCode",{parentName:"p"},"value")," which can be parsed as a number, and accepts ",Object(i.b)("inlineCode",{parentName:"p"},"options")," that conform to ",Object(i.b)("inlineCode",{parentName:"p"},"NumberFormatOptions"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatNumber(1000, {style: 'currency', currency: 'USD'})\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Formatting Number using ",Object(i.b)("inlineCode",{parentName:"strong"},"unit"))),Object(i.b)("p",null,"Currently this is part of ES2020 ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://tc39.es/ecma402/#numberformat-objects"}),"NumberFormat"),".\nWe've provided a polyfill ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-numberformat"}),"here")," and ",Object(i.b)("inlineCode",{parentName:"p"},"@formatjs/intl")," types allow users to pass\nin a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-numberformat#SupportedUnits"}),"sanctioned unit"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatNumber(1000, {\n  style: 'unit',\n  unit: 'kilobyte',\n  unitDisplay: 'narrow',\n})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatNumber(1000, {\n  unit: 'fahrenheit',\n  unitDisplay: 'long',\n  style: 'unit',\n})\n")),Object(i.b)("h2",{id:"formatplural"},"formatPlural"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"type PluralFormatOptions = {\n  type?: 'cardinal' | 'ordinal' = 'cardinal'\n}\n\nfunction formatPlural(\n  value: number,\n  options?: Intl.PluralFormatOptions\n): 'zero' | 'one' | 'two' | 'few' | 'many' | 'other'\n")),Object(i.b)("p",null,"This function will return a plural category string: ",Object(i.b)("inlineCode",{parentName:"p"},'"zero"'),", ",Object(i.b)("inlineCode",{parentName:"p"},'"one"'),", ",Object(i.b)("inlineCode",{parentName:"p"},'"two"'),", ",Object(i.b)("inlineCode",{parentName:"p"},'"few"'),", ",Object(i.b)("inlineCode",{parentName:"p"},'"many"'),", or ",Object(i.b)("inlineCode",{parentName:"p"},'"other"'),". It expects a ",Object(i.b)("inlineCode",{parentName:"p"},"value")," which can be parsed as a number, and accepts ",Object(i.b)("inlineCode",{parentName:"p"},"options")," that conform to ",Object(i.b)("inlineCode",{parentName:"p"},"PluralFormatOptions"),"."),Object(i.b)("p",null,"This is a low-level utility whose output could be provided to a ",Object(i.b)("inlineCode",{parentName:"p"},"switch")," statement to select a particular string to display."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatPlural(1)\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatPlural(3, {style: 'ordinal'})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatPlural(4, {style: 'ordinal'})\n")),Object(i.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"multiple language support")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This function should only be used in apps that only need to support one language. If your app supports multiple languages use ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#formatmessage"}),Object(i.b)("inlineCode",{parentName:"a"},"formatMessage"))," instead."))),Object(i.b)("h2",{id:"formatlist"},"formatList"),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"browser support")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This requires ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat"}),"Intl.ListFormat")," which has limited browser support. Please use our ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-listformat"}),"polyfill")," if you plan to support them."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"type ListFormatOptions = {\n  type?: 'disjunction' | 'conjunction' | 'unit'\n  style?: 'long' | 'short' | 'narrow'\n}\n\nfunction formatList(\n  elements: (string | React.ReactNode)[],\n  options?: Intl.ListFormatOptions\n): string | React.ReactNode[]\n")),Object(i.b)("p",null,"This function allows you to join list of things together in an i18n-safe way. For example, when the locale is ",Object(i.b)("inlineCode",{parentName:"p"},"en"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatList(['Me', 'myself', 'I'], {type: 'conjunction'})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx",metastring:"live",live:!0}),"intl.formatList(['5 hours', '3 minutes'], {type: 'unit'})\n")),Object(i.b)("h2",{id:"formatdisplayname"},"formatDisplayName"),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"browser support")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"This requires ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames"}),"Intl.DisplayNames")," which has limited browser support. Please use our ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-displaynames"}),"polyfill")," if you plan to support them."))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"type FormatDisplayNameOptions = {\n  style?: 'narrow' | 'short' | 'long'\n  type?: 'language' | 'region' | 'script' | 'currency'\n  fallback?: 'code' | 'none'\n}\n\nfunction formatDisplayName(\n  value: string | number | object,\n  options: FormatDisplayNameOptions\n): string | undefined\n")),Object(i.b)("p",null,"Usage examples:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"intl.formatDisplayName('zh-Hans-SG', {type: 'language'})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"// ISO-15924 four letters script code to localized display name\nintl.formatDisplayName('Deva', {type: 'script'})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"// ISO-4217 currency code to localized display name\nintl.formatDisplayName('CNY', {type: 'currency'})\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"// ISO-3166 two letters region code to localized display name\nintl.formatDisplayName('UN', {type: 'region'})\n")),Object(i.b)("h2",{id:"formatmessage"},"formatMessage"),Object(i.b)("h3",{id:"message-syntax"},"Message Syntax"),Object(i.b)("p",null,"String/Message formatting is a paramount feature of React Intl and it builds on ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://unicode-org.github.io/icu/userguide/format_parse/messages"}),"ICU Message Formatting")," by using the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/core-concepts/icu-syntax"}),"ICU Message Syntax"),". This message syntax allows for simple to complex messages to be defined, translated, and then formatted at runtime."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Simple Message:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"Hello, {name}\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Complex Message:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"Hello, {name}, you have {itemCount, plural,\n    =0 {no items}\n    one {# item}\n    other {# items}\n}.\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"See:")," The ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/core-concepts/icu-syntax"}),"Message Syntax Guide"),"."),Object(i.b)("h3",{id:"message-descriptor"},"Message Descriptor"),Object(i.b)("p",null,"React Intl has a Message Descriptor concept which is used to define your app's default messages/strings and is passed into ",Object(i.b)("inlineCode",{parentName:"p"},"formatMessage"),". The Message Descriptors work very well for providing the data necessary for having the strings/messages translated, and they contain the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"id"),":")," A unique, stable identifier for the message"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"description"),":")," Context for the translator about how it's used in the UI"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"strong"},"defaultMessage"),":")," The default message (probably in English)")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"type MessageDescriptor = {\n  id: string\n  defaultMessage?: string\n  description?: string | object\n}\n")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Extracting Message Descriptor")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"You can extract inline-declared messages from source files using ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://localhost:3000/docs/getting-started/message-extraction"}),"our CLI"),"."))),Object(i.b)("h3",{id:"message-formatting-fallbacks"},"Message Formatting Fallbacks"),Object(i.b)("p",null,"The message formatting APIs go the extra mile to provide fallbacks for the common situations where formatting fails; at the very least a non-empty string should always be returned. Here's the message formatting fallback algorithm:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Lookup and format the translated message at ",Object(i.b)("inlineCode",{parentName:"li"},"id"),", passed to ",Object(i.b)("inlineCode",{parentName:"li"},"<IntlProvider>"),"."),Object(i.b)("li",{parentName:"ol"},"Fallback to formatting the ",Object(i.b)("inlineCode",{parentName:"li"},"defaultMessage"),"."),Object(i.b)("li",{parentName:"ol"},"Fallback to source of translated message at ",Object(i.b)("inlineCode",{parentName:"li"},"id"),"."),Object(i.b)("li",{parentName:"ol"},"Fallback to source of ",Object(i.b)("inlineCode",{parentName:"li"},"defaultMessage"),"."),Object(i.b)("li",{parentName:"ol"},"Fallback to the literal message ",Object(i.b)("inlineCode",{parentName:"li"},"id"),".")),Object(i.b)("p",null,'Above, "source" refers to using the template as is, without any substitutions made.'),Object(i.b)("h3",{id:"usage"},"Usage"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"type MessageFormatPrimitiveValue = string | number | boolean | null | undefined\nfunction formatMessage(\n  descriptor: MessageDescriptor,\n  values?: Record<string, MessageFormatPrimitiveValue>\n): string\nfunction formatMessage(\n  descriptor: MessageDescriptor,\n  values?: Record<\n    string,\n    MessageFormatPrimitiveValue | React.ReactElement | FormatXMLElementFn\n  >\n): string | React.ReactNodeArray\n")),Object(i.b)("p",null,"This function will return a formatted message string. It expects a ",Object(i.b)("inlineCode",{parentName:"p"},"MessageDescriptor")," with at least an ",Object(i.b)("inlineCode",{parentName:"p"},"id")," property, and accepts a shallow ",Object(i.b)("inlineCode",{parentName:"p"},"values")," object which are used to fill placeholders in the message."),Object(i.b)("p",null,"If a translated message with the ",Object(i.b)("inlineCode",{parentName:"p"},"id")," has been passed to the ",Object(i.b)("inlineCode",{parentName:"p"},"<IntlProvider>")," via its ",Object(i.b)("inlineCode",{parentName:"p"},"messages")," prop it will be formatted, otherwise it will fallback to formatting ",Object(i.b)("inlineCode",{parentName:"p"},"defaultMessage"),". See: ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#message-formatting-fallbacks"}),"Message Formatting Fallbacks")," for more details."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, {name}!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {name: 'Eric'})\n}\n")),Object(i.b)("p",null,"with ",Object(i.b)("inlineCode",{parentName:"p"},"ReactElement")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, {name}!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {name: <b>Eric</b>})\n}\n")),Object(i.b)("p",null,"with rich text formatting"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts",metastring:"live",live:!0}),"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, <bold>{name}</bold>!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {\n    name: 'Eric',\n    bold: str => <b>{str}</b>,\n  })\n}\n")),Object(i.b)("p",null,"The message we defined using ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#definemessages"}),Object(i.b)("inlineCode",{parentName:"a"},"defineMessages"))," to support extraction via ",Object(i.b)("inlineCode",{parentName:"p"},"babel-plugin-react-intl"),", but it doesn't have to be if you're not using the Babel plugin."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"simple message")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Messages can be simple strings ",Object(i.b)("em",{parentName:"p"},"without")," placeholders, and that's the most common type of message."))),Object(i.b)("h2",{id:"definemessagesdefinemessage"},"defineMessages/defineMessage"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface MessageDescriptor {\n  id?: string\n  description?: string | object\n  defaultMessage?: string\n}\n\nfunction defineMessages(\n  messageDescriptors: Record<string, MessageDescriptor>\n): Record<string, MessageDescriptor>\n\nfunction defineMessage(messageDescriptor: MessageDescriptor): MessageDescriptor\n")),Object(i.b)("p",null,"These functions is exported by the ",Object(i.b)("inlineCode",{parentName:"p"},"@formatjs/intl")," package and is simply a ",Object(i.b)("em",{parentName:"p"},"hook")," for our CLI & babel/TS plugin to use when compiling default messages defined in JavaScript source files. This function simply returns the Message Descriptor map object that's passed-in."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import {defineMessages, defineMessage} from '@formatjs/intl'\n\nconst messages = defineMessages({\n  greeting: {\n    id: 'app.home.greeting',\n    description: 'Message to greet the user.',\n    defaultMessage: 'Hello, {name}!',\n  },\n})\n\nconst msg = defineMessage({\n  id: 'single',\n  defaultMessage: 'single message',\n  description: 'header',\n})\n")))}p.isMDXComponent=!0},116:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=b(a),d=n,u=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return a?r.a.createElement(u,o(o({ref:t},c),{},{components:a})):r.a.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},117:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},118:function(e,t,a){"use strict";var n=a(0),r=a(119);t.a=function(){const e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},119:function(e,t,a){"use strict";var n=a(0);const r=Object(n.createContext)(void 0);t.a=r},120:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=a(118),s=a(117),o=a(52),l=a.n(o);const c=37,b=39;t.a=function(e){const{lazy:t,block:a,children:o,defaultValue:m,values:p,groupId:d,className:u}=e,{tabGroupChoices:g,setTabGroupChoices:O}=Object(i.a)(),[j,f]=Object(n.useState)(m);if(null!=d){const e=g[d];null!=e&&e!==j&&p.some((t=>t.value===e))&&f(e)}const h=e=>{f(e),null!=d&&O(d,e)},N=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":a},u)},p.map((({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===e,className:Object(s.a)("tabs__item",l.a.tabItem,{"tabs__item--active":j===e}),key:e,ref:e=>N.push(e),onKeyDown:e=>{((e,t,a)=>{switch(a.keyCode){case b:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(N,e.target,e)},onFocus:()=>h(e),onClick:()=>{h(e)}},t)))),t?Object(n.cloneElement)(o.filter((e=>e.props.value===j))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},o.map(((e,t)=>Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}},121:function(e,t,a){"use strict";var n=a(3),r=a(0),i=a.n(r);t.a=function({children:e,hidden:t,className:a}){return i.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:t,className:a}),e)}}}]);