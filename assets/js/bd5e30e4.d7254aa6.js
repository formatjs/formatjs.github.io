"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4898],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(a),u=r,g=c["".concat(o,".").concat(u)]||c[u]||d[u]||i;return a?n.createElement(g,l(l({ref:t},p),{},{components:a})):n.createElement(g,l({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8215:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294);const r=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},6396:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7462),r=a(7294),i=a(2389),l=a(9443);const s=function(){var e=(0,r.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var o=a(3616),m=a(6010);const p="tabItem_1uMI";function d(e){var t,a,i,l=e.lazy,d=e.block,c=e.defaultValue,u=e.values,g=e.groupId,f=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=u?u:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,o.lx)(k,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===c?c:null!=(t=null!=c?c:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(i=h[0])?void 0:i.props.value;if(null!==N&&!k.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=s(),y=b.tabGroupChoices,w=b.setTabGroupChoices,C=(0,r.useState)(N),T=C[0],M=C[1],x=[],I=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var F=y[g];null!=F&&F!==T&&k.some((function(e){return e.value===F}))&&M(F)}var D=function(e){var t=e.currentTarget,a=x.indexOf(t),n=k[a].value;n!==T&&(I(t),M(n),null!=g&&w(g,n))},O=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=x.indexOf(e.currentTarget)+1;a=x[n]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;a=x[r]||x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":d},f)},k.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return x.push(e)},onKeyDown:O,onFocus:D,onClick:D},i,{className:(0,m.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(h.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function c(e){var t=(0,i.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},6158:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>m,contentTitle:()=>p,metadata:()=>d,toc:()=>c,default:()=>g});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=a(6396),s=a(8215),o=["components"],m={id:"intl",title:"Core FormatJS Intl"},p=void 0,d={unversionedId:"intl",id:"intl",title:"Core FormatJS Intl",description:"This library contains core intl API that is used by react-intl.",source:"@site/docs/intl.md",sourceDirName:".",slug:"/intl",permalink:"/docs/intl",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/intl.md",tags:[],version:"current",frontMatter:{id:"intl",title:"Core FormatJS Intl"},sidebar:"api",previous:{title:"Upgrade Guide (v1 -> v2)",permalink:"/docs/react-intl/upgrade-guide-2x"},next:{title:"Vue Plugin for formatjs",permalink:"/docs/vue-intl"}},c=[{value:"Installation",id:"installation",children:[],level:2},{value:"The <code>intl</code> object",id:"the-intl-object",children:[],level:2},{value:"createIntl",id:"createintl",children:[],level:2},{value:"createIntlCache",id:"createintlcache",children:[],level:2},{value:"IntlShape",id:"intlshape",children:[{value:"locale, formats, and messages",id:"locale-formats-and-messages",children:[],level:3},{value:"defaultLocale and defaultFormats",id:"defaultlocale-and-defaultformats",children:[],level:3},{value:"onError",id:"onerror",children:[],level:3},{value:"defaultRichTextElements",id:"defaultrichtextelements",children:[],level:3},{value:"fallbackOnEmptyString",id:"fallbackonemptystring",children:[],level:3}],level:2},{value:"formatDate",id:"formatdate",children:[],level:2},{value:"formatTime",id:"formattime",children:[],level:2},{value:"formatRelativeTime",id:"formatrelativetime",children:[],level:2},{value:"formatNumber",id:"formatnumber",children:[],level:2},{value:"formatPlural",id:"formatplural",children:[],level:2},{value:"formatList",id:"formatlist",children:[],level:2},{value:"formatDisplayName",id:"formatdisplayname",children:[],level:2},{value:"formatMessage",id:"formatmessage",children:[{value:"Message Syntax",id:"message-syntax",children:[],level:3},{value:"Message Descriptor",id:"message-descriptor",children:[],level:3},{value:"Message Formatting Fallbacks",id:"message-formatting-fallbacks",children:[],level:3},{value:"Usage",id:"usage",children:[],level:3}],level:2},{value:"defineMessages/defineMessage",id:"definemessagesdefinemessage",children:[],level:2}],u={toc:c};function g(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This library contains core intl API that is used by ",(0,i.kt)("inlineCode",{parentName:"p"},"react-intl"),"."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(l.Z,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm i -S @formatjs/intl\n"))),(0,i.kt)(s.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @formatjs/intl\n")))),(0,i.kt)("h2",{id:"the-intl-object"},"The ",(0,i.kt)("inlineCode",{parentName:"h2"},"intl")," object"),(0,i.kt)("p",null,"The core of ",(0,i.kt)("inlineCode",{parentName:"p"},"@formatjs/intl")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"intl")," object (of type ",(0,i.kt)("a",{parentName:"p",href:"#intlshape"},(0,i.kt)("inlineCode",{parentName:"a"},"IntlShape")),"), which is the instance to store a cache of all ",(0,i.kt)("inlineCode",{parentName:"p"},"Intl.*")," APIs, configurations, compiled messages and such. The lifecycle of the ",(0,i.kt)("inlineCode",{parentName:"p"},"intl")," object is typically tied to the ",(0,i.kt)("inlineCode",{parentName:"p"},"locale")," & the list of ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," that it contains, which means when you switch ",(0,i.kt)("inlineCode",{parentName:"p"},"locale"),", this object should be recreated."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"intl")," object should be reused as much as possible for performance."))),(0,i.kt)("h2",{id:"createintl"},"createIntl"),(0,i.kt)("p",null,"This allows you to create an ",(0,i.kt)("inlineCode",{parentName:"p"},"IntlShape")," object that contains all ",(0,i.kt)("inlineCode",{parentName:"p"},"format*")," methods. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import {createIntl, createIntlCache} from '@formatjs/intl'\n\n// This is optional but highly recommended\n// since it prevents memory leak\nconst cache = createIntlCache()\n\nconst intl = createIntl(\n  {\n    locale: 'fr-FR',\n    messages: {},\n  },\n  cache\n)\n\n// Call imperatively\nintl.formatNumber(20)\n")),(0,i.kt)("h2",{id:"createintlcache"},"createIntlCache"),(0,i.kt)("p",null,"Creates a cache instance to be used globally across locales. This memoizes previously created ",(0,i.kt)("inlineCode",{parentName:"p"},"Intl.*")," constructors for performance and is only an in-memory cache."),(0,i.kt)("h2",{id:"intlshape"},"IntlShape"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface IntlConfig {\n  locale: string\n  timeZone?: string\n  fallbackOnEmptyString?: boolean\n  formats: CustomFormats\n  messages: Record<string, string> | Record<string, MessageFormatElement[]>\n  defaultLocale: string\n  defaultRichTextElements?: Record<string, FormatXMLElementFn<React.ReactNode>>\n  defaultFormats: CustomFormats\n  onError(err: string): void\n}\n\ninterface IntlFormatters {\n  formatDate(value: number | Date | string, opts?: FormatDateOptions): string\n  formatTime(value: number | Date | string, opts?: FormatDateOptions): string\n  formatDateToParts(\n    value: number | Date | string,\n    opts?: FormatDateOptions\n  ): Intl.DateTimeFormatPart[]\n  formatTimeToParts(\n    value: number | Date | string,\n    opts?: FormatDateOptions\n  ): Intl.DateTimeFormatPart[]\n  formatRelativeTime(\n    value: number,\n    unit?: FormattableUnit,\n    opts?: FormatRelativeTimeOptions\n  ): string\n  formatNumber(value: number, opts?: FormatNumberOptions): string\n  formatNumberToParts(\n    value: number,\n    opts?: FormatNumberOptions\n  ): Intl.NumberFormatPart[]\n  formatPlural(\n    value: number | string,\n    opts?: FormatPluralOptions\n  ): ReturnType<Intl.PluralRules['select']>\n  formatMessage(\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType | FormatXMLElementFn<string, string>>\n  ): string\n  formatMessage(\n    descriptor: MessageDescriptor,\n    values?: Record<string, PrimitiveType | T | FormatXMLElementFn<T, R>>\n  ): R\n  formatList(values: Array<string>, opts?: FormatListOptions): string\n  formatList(\n    values: Array<string | T>,\n    opts?: FormatListOptions\n  ): T | string | Array<string | T>\n  formatListToParts(values: Array<string | T>, opts?: FormatListOptions): Part[]\n  formatDisplayName(\n    value: string,\n    opts?: FormatDisplayNameOptions\n  ): string | undefined\n}\n\ntype IntlShape = IntlConfig & IntlFormatters\n")),(0,i.kt)("p",null,"The definition above shows what the ",(0,i.kt)("inlineCode",{parentName:"p"},"intl")," object will look like. It's made up of two parts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"IntlConfig"),":")," The intl metadata passed as props into the parent ",(0,i.kt)("inlineCode",{parentName:"li"},"<IntlProvider>"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"IntlFormatters"),":")," The imperative formatting API described below.")),(0,i.kt)("h3",{id:"locale-formats-and-messages"},"locale, formats, and messages"),(0,i.kt)("p",null,"The user's current locale and what the app should be rendered in. While ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultLocale")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultFormats")," are for fallbacks or during development and represent the app's default. Notice how there is no ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultMessages"),", that's because each ",(0,i.kt)("a",{parentName:"p",href:"#message-descriptor"},"Message Descriptor")," provides a ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultMessage"),"."),(0,i.kt)("h3",{id:"defaultlocale-and-defaultformats"},"defaultLocale and defaultFormats"),(0,i.kt)("p",null,"Default locale & formats for when a message is not translated (missing from ",(0,i.kt)("inlineCode",{parentName:"p"},"messages"),"). ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultLocale")," should be the locale that ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultMessage"),"s are declared in so that a sentence is coherent in a single locale. Without ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultLocale")," and/or if it's set incorrectly, you might run into scenario where a sentence is in English but embedded date/time is in Spanish."),(0,i.kt)("h3",{id:"onerror"},"onError"),(0,i.kt)("p",null,"Allows the user to provide a custom error handler. By default, error messages are logged using ",(0,i.kt)("inlineCode",{parentName:"p"},"console.error")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," is not set to ",(0,i.kt)("inlineCode",{parentName:"p"},"production"),"."),(0,i.kt)("h3",{id:"defaultrichtextelements"},"defaultRichTextElements"),(0,i.kt)("p",null,"A map of tag to rich text formatting function. This is meant to provide a centralized way to format common tags such as ",(0,i.kt)("inlineCode",{parentName:"p"},"<b>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"<p>"),"... or enforcing certain Design System in the codebase (e.g standardized ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),"...). See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/formatjs/formatjs/issues/1752"},"https://github.com/formatjs/formatjs/issues/1752")," for more context."),(0,i.kt)("h3",{id:"fallbackonemptystring"},"fallbackOnEmptyString"),(0,i.kt)("p",null,"Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"This boolean option can be useful if you want to intentionally provide empty values for certain locales via empty strings. When ",(0,i.kt)("inlineCode",{parentName:"p"},"fallbackOnEmptyString")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),', empty strings will be returned instead of triggering the fallback procedure. This behaviour can be leveraged to "skip" content in specific locales.'),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/formatjs/formatjs/issues/607"},"this issue")," for more context."),(0,i.kt)("h2",{id:"formatdate"},"formatDate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"function formatDate(\n  value: number | Date,\n  options?: Intl.DateTimeFormatOptions & {format?: string}\n): string\n")),(0,i.kt)("p",null,"This function will return a formatted date string. It expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," which can be parsed as a date (i.e., ",(0,i.kt)("inlineCode",{parentName:"p"},"isFinite(new Date(value))"),"), and accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," that conform to ",(0,i.kt)("inlineCode",{parentName:"p"},"DateTimeFormatOptions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"intl.formatDate(Date.now(), {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n})\n")),(0,i.kt)("h2",{id:"formattime"},"formatTime"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"function formatTime(\n  value: number | Date,\n  options?: Intl.DateTimeFormatOptions & {format?: string}\n): string\n")),(0,i.kt)("p",null,"This function will return a formatted date string, but it differs from ",(0,i.kt)("a",{parentName:"p",href:"#formatdate"},(0,i.kt)("inlineCode",{parentName:"a"},"formatDate"))," by having the following default options:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"{\n    hour: 'numeric',\n    minute: 'numeric',\n}\n")),(0,i.kt)("p",null,"It expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," which can be parsed as a date (i.e., ",(0,i.kt)("inlineCode",{parentName:"p"},"isFinite(new Date(value))"),"), and accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," that conform to ",(0,i.kt)("inlineCode",{parentName:"p"},"DateTimeFormatOptions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'intl.formatTime(Date.now()) // "4:03 PM"\n')),(0,i.kt)("h2",{id:"formatrelativetime"},"formatRelativeTime"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"browser support")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This requires ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat"},"Intl.RelativeTimeFormat")," which has limited browser support. Please use our ",(0,i.kt)("a",{parentName:"p",href:"/docs/polyfills/intl-relativetimeformat"},"polyfill")," if you plan to support them."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type Unit =\n  | 'second'\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'week'\n  | 'month'\n  | 'quarter'\n  | 'year'\n\ntype RelativeTimeFormatOptions = {\n  numeric?: 'always' | 'auto'\n  style?: 'long' | 'short' | 'narrow'\n}\n\nfunction formatRelativeTime(\n  value: number,\n  unit: Unit,\n  options?: Intl.RelativeTimeFormatOptions & {\n    format?: string\n  }\n): string\n")),(0,i.kt)("p",null,'This function will return a formatted relative time string (e.g., "1 hour ago"). It expects a ',(0,i.kt)("inlineCode",{parentName:"p"},"value")," which is a number, a ",(0,i.kt)("inlineCode",{parentName:"p"},"unit")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," that conform to ",(0,i.kt)("inlineCode",{parentName:"p"},"Intl.RelativeTimeFormatOptions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatRelativeTime(0)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatRelativeTime(-24, 'hour', {style: 'narrow'})\n")),(0,i.kt)("h2",{id:"formatnumber"},"formatNumber"),(0,i.kt)("p",null,"This function uses ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat"},(0,i.kt)("inlineCode",{parentName:"a"},"Intl.NumberFormat"))," options."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"function formatNumber(\n  value: number,\n  options?: Intl.NumberFormatOptions & {format?: string}\n): string\n")),(0,i.kt)("p",null,"This function will return a formatted number string. It expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," which can be parsed as a number, and accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," that conform to ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberFormatOptions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatNumber(1000, {style: 'currency', currency: 'USD'})\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Formatting Number using ",(0,i.kt)("inlineCode",{parentName:"strong"},"unit"))),(0,i.kt)("p",null,"Currently this is part of ES2020 ",(0,i.kt)("a",{parentName:"p",href:"https://tc39.es/ecma402/#numberformat-objects"},"NumberFormat"),".\nWe've provided a polyfill ",(0,i.kt)("a",{parentName:"p",href:"/docs/polyfills/intl-numberformat"},"here")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"@formatjs/intl")," types allow users to pass\nin a ",(0,i.kt)("a",{parentName:"p",href:"/docs/polyfills/intl-numberformat#SupportedUnits"},"sanctioned unit"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatNumber(1000, {\n  style: 'unit',\n  unit: 'kilobyte',\n  unitDisplay: 'narrow',\n})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatNumber(1000, {\n  unit: 'fahrenheit',\n  unitDisplay: 'long',\n  style: 'unit',\n})\n")),(0,i.kt)("h2",{id:"formatplural"},"formatPlural"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type PluralFormatOptions = {\n  type?: 'cardinal' | 'ordinal' = 'cardinal'\n}\n\nfunction formatPlural(\n  value: number,\n  options?: Intl.PluralFormatOptions\n): 'zero' | 'one' | 'two' | 'few' | 'many' | 'other'\n")),(0,i.kt)("p",null,"This function will return a plural category string: ",(0,i.kt)("inlineCode",{parentName:"p"},'"zero"'),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"one"'),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"two"'),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"few"'),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"many"'),", or ",(0,i.kt)("inlineCode",{parentName:"p"},'"other"'),". It expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," which can be parsed as a number, and accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," that conform to ",(0,i.kt)("inlineCode",{parentName:"p"},"PluralFormatOptions"),"."),(0,i.kt)("p",null,"This is a low-level utility whose output could be provided to a ",(0,i.kt)("inlineCode",{parentName:"p"},"switch")," statement to select a particular string to display."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatPlural(1)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatPlural(3, {style: 'ordinal'})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatPlural(4, {style: 'ordinal'})\n")),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"multiple language support")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This function should only be used in apps that only need to support one language. If your app supports multiple languages use ",(0,i.kt)("a",{parentName:"p",href:"#formatmessage"},(0,i.kt)("inlineCode",{parentName:"a"},"formatMessage"))," instead."))),(0,i.kt)("h2",{id:"formatlist"},"formatList"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"browser support")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This requires ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat"},"Intl.ListFormat")," which has limited browser support. Please use our ",(0,i.kt)("a",{parentName:"p",href:"/docs/polyfills/intl-listformat"},"polyfill")," if you plan to support them."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type ListFormatOptions = {\n  type?: 'disjunction' | 'conjunction' | 'unit'\n  style?: 'long' | 'short' | 'narrow'\n}\n\nfunction formatList(\n  elements: (string | React.ReactNode)[],\n  options?: Intl.ListFormatOptions\n): string | React.ReactNode[]\n")),(0,i.kt)("p",null,"This function allows you to join list of things together in an i18n-safe way. For example, when the locale is ",(0,i.kt)("inlineCode",{parentName:"p"},"en"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatList(['Me', 'myself', 'I'], {type: 'conjunction'})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},"intl.formatList(['5 hours', '3 minutes'], {type: 'unit'})\n")),(0,i.kt)("h2",{id:"formatdisplayname"},"formatDisplayName"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"browser support")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This requires ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames"},"Intl.DisplayNames")," which has limited browser support. Please use our ",(0,i.kt)("a",{parentName:"p",href:"/docs/polyfills/intl-displaynames"},"polyfill")," if you plan to support them."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type FormatDisplayNameOptions = {\n  style?: 'narrow' | 'short' | 'long'\n  type?: 'language' | 'region' | 'script' | 'currency'\n  fallback?: 'code' | 'none'\n}\n\nfunction formatDisplayName(\n  value: string | number | Record<string, unknown>,\n  options: FormatDisplayNameOptions\n): string | undefined\n")),(0,i.kt)("p",null,"Usage examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"intl.formatDisplayName('zh-Hans-SG', {type: 'language'})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"// ISO-15924 four letters script code to localized display name\nintl.formatDisplayName('Deva', {type: 'script'})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"// ISO-4217 currency code to localized display name\nintl.formatDisplayName('CNY', {type: 'currency'})\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"// ISO-3166 two letters region code to localized display name\nintl.formatDisplayName('UN', {type: 'region'})\n")),(0,i.kt)("h2",{id:"formatmessage"},"formatMessage"),(0,i.kt)("h3",{id:"message-syntax"},"Message Syntax"),(0,i.kt)("p",null,"String/Message formatting is a paramount feature of React Intl and it builds on ",(0,i.kt)("a",{parentName:"p",href:"https://unicode-org.github.io/icu/userguide/format_parse/messages"},"ICU Message Formatting")," by using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/core-concepts/icu-syntax"},"ICU Message Syntax"),". This message syntax allows for simple to complex messages to be defined, translated, and then formatted at runtime."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Simple Message:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Hello, {name}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Complex Message:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Hello, {name}, you have {itemCount, plural,\n    =0 {no items}\n    one {# item}\n    other {# items}\n}.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"See:")," The ",(0,i.kt)("a",{parentName:"p",href:"/docs/core-concepts/icu-syntax"},"Message Syntax Guide"),"."),(0,i.kt)("h3",{id:"message-descriptor"},"Message Descriptor"),(0,i.kt)("p",null,"React Intl has a Message Descriptor concept which is used to define your app's default messages/strings and is passed into ",(0,i.kt)("inlineCode",{parentName:"p"},"formatMessage"),". The Message Descriptors work very well for providing the data necessary for having the strings/messages translated, and they contain the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"id"),":")," A unique, stable identifier for the message"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"),":")," Context for the translator about how it's used in the UI"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"defaultMessage"),":")," The default message (probably in English)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"type MessageDescriptor = {\n  id: string\n  defaultMessage?: string\n  description?: string | object\n}\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Extracting Message Descriptor")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can extract inline-declared messages from source files using ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3000/docs/getting-started/message-extraction"},"our CLI"),"."))),(0,i.kt)("h3",{id:"message-formatting-fallbacks"},"Message Formatting Fallbacks"),(0,i.kt)("p",null,"The message formatting APIs go the extra mile to provide fallbacks for the common situations where formatting fails; at the very least a non-empty string should always be returned. Here's the message formatting fallback algorithm:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Lookup and format the translated message at ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),", passed to ",(0,i.kt)("inlineCode",{parentName:"li"},"<IntlProvider>"),"."),(0,i.kt)("li",{parentName:"ol"},"Fallback to formatting the ",(0,i.kt)("inlineCode",{parentName:"li"},"defaultMessage"),"."),(0,i.kt)("li",{parentName:"ol"},"Fallback to source of translated message at ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),"."),(0,i.kt)("li",{parentName:"ol"},"Fallback to source of ",(0,i.kt)("inlineCode",{parentName:"li"},"defaultMessage"),"."),(0,i.kt)("li",{parentName:"ol"},"Fallback to the literal message ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),".")),(0,i.kt)("p",null,'Above, "source" refers to using the template as is, without any substitutions made.'),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type MessageFormatPrimitiveValue = string | number | boolean | null | undefined\nfunction formatMessage(\n  descriptor: MessageDescriptor,\n  values?: Record<string, MessageFormatPrimitiveValue>\n): string\nfunction formatMessage(\n  descriptor: MessageDescriptor,\n  values?: Record<\n    string,\n    MessageFormatPrimitiveValue | React.ReactElement | FormatXMLElementFn\n  >\n): string | React.ReactNodeArray\n")),(0,i.kt)("p",null,"This function will return a formatted message string. It expects a ",(0,i.kt)("inlineCode",{parentName:"p"},"MessageDescriptor")," with at least an ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," property, and accepts a shallow ",(0,i.kt)("inlineCode",{parentName:"p"},"values")," object which are used to fill placeholders in the message."),(0,i.kt)("p",null,"If a translated message with the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," has been passed to the ",(0,i.kt)("inlineCode",{parentName:"p"},"<IntlProvider>")," via its ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," prop it will be formatted, otherwise it will fallback to formatting ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultMessage"),". See: ",(0,i.kt)("a",{parentName:"p",href:"#message-formatting-fallbacks"},"Message Formatting Fallbacks")," for more details."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, {name}!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {name: 'Eric'})\n}\n")),(0,i.kt)("p",null,"with ",(0,i.kt)("inlineCode",{parentName:"p"},"ReactElement")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, {name}!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {name: <b>Eric</b>})\n}\n")),(0,i.kt)("p",null,"with rich text formatting"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"live",live:!0},"function () {\n  const messages = defineMessages({\n    greeting: {\n      id: 'app.greeting',\n      defaultMessage: 'Hello, <bold>{name}</bold>!',\n      description: 'Greeting to welcome the user to the app',\n    },\n  })\n\n  return intl.formatMessage(messages.greeting, {\n    name: 'Eric',\n    bold: str => <b>{str}</b>,\n  })\n}\n")),(0,i.kt)("p",null,"The message we defined using ",(0,i.kt)("a",{parentName:"p",href:"#definemessages"},(0,i.kt)("inlineCode",{parentName:"a"},"defineMessages"))," to support extraction via ",(0,i.kt)("inlineCode",{parentName:"p"},"babel-plugin-formatjs"),", but it doesn't have to be if you're not using the Babel plugin."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"simple message")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Messages can be simple strings ",(0,i.kt)("em",{parentName:"p"},"without")," placeholders, and that's the most common type of message."))),(0,i.kt)("h2",{id:"definemessagesdefinemessage"},"defineMessages/defineMessage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"interface MessageDescriptor {\n  id?: string\n  description?: string | object\n  defaultMessage?: string\n}\n\nfunction defineMessages(\n  messageDescriptors: Record<string, MessageDescriptor>\n): Record<string, MessageDescriptor>\n\nfunction defineMessage(messageDescriptor: MessageDescriptor): MessageDescriptor\n")),(0,i.kt)("p",null,"These functions is exported by the ",(0,i.kt)("inlineCode",{parentName:"p"},"@formatjs/intl")," package and is simply a ",(0,i.kt)("em",{parentName:"p"},"hook")," for our CLI & babel/TS plugin to use when compiling default messages defined in JavaScript source files. This function simply returns the Message Descriptor map object that's passed-in."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {defineMessages, defineMessage} from '@formatjs/intl'\n\nconst messages = defineMessages({\n  greeting: {\n    id: 'app.home.greeting',\n    description: 'Message to greet the user.',\n    defaultMessage: 'Hello, {name}!',\n  },\n})\n\nconst msg = defineMessage({\n  id: 'single',\n  defaultMessage: 'single message',\n  description: 'header',\n})\n")))}g.isMDXComponent=!0}}]);