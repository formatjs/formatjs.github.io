(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{123:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return b}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,b=m["".concat(i,".").concat(d)]||m[d]||u[d]||r;return a?l.a.createElement(b,o(o({ref:t},c),{},{components:a})):l.a.createElement(b,o({ref:t},c))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return l.a.createElement.apply(null,i)}return l.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},124:function(e,t,a){"use strict";function n(e){var t,a,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(l&&(l+=" "),l+=a);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}t.a=function(){for(var e,t,a=0,l="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(l&&(l+=" "),l+=t);return l}},125:function(e,t,a){"use strict";var n=a(0),l=a(126);t.a=function(){var e=Object(n.useContext)(l.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},126:function(e,t,a){"use strict";var n=a(0),l=Object(n.createContext)(void 0);t.a=l},127:function(e,t,a){"use strict";var n=a(0),l=a.n(n),r=a(125),i=a(124),o=a(55),s=a.n(o),c=37,p=39;t.a=function(e){var t=e.lazy,a=e.block,o=e.defaultValue,m=e.values,u=e.groupId,d=e.className,b=Object(r.a)(),f=b.tabGroupChoices,y=b.setTabGroupChoices,j=Object(n.useState)(o),O=j[0],v=j[1],h=n.Children.toArray(e.children),g=[];if(null!=u){var N=f[u];null!=N&&N!==O&&m.some((function(e){return e.value===N}))&&v(N)}var w=function(e){var t=e.target,a=g.indexOf(t),n=h[a].props.value;v(n),null!=u&&y(u,n)},I=function(e){var t,a;switch(e.keyCode){case p:var n=g.indexOf(e.target)+1;a=g[n]||g[0];break;case c:var l=g.indexOf(e.target)-1;a=g[l]||g[g.length-1]}null===(t=a)||void 0===t||t.focus()};return l.a.createElement("div",{className:"tabs-container"},l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":a},d)},m.map((function(e){var t=e.value,a=e.label;return l.a.createElement("li",{role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,className:Object(i.a)("tabs__item",s.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return g.push(e)},onKeyDown:I,onFocus:w,onClick:w},a)}))),t?Object(n.cloneElement)(h.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):l.a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},128:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){var t=e.children,a=e.hidden,n=e.className;return l.a.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return u}));var n=a(3),l=a(8),r=(a(0),a(123)),i=a(127),o=a(128),s={id:"intl-displaynames",title:"Intl.DisplayNames"},c={unversionedId:"polyfills/intl-displaynames",id:"polyfills/intl-displaynames",isDocsHomePage:!1,title:"Intl.DisplayNames",description:"A polyfill for Intl.DisplayNames.",source:"@site/docs/polyfills/intl-displaynames.md",slug:"/polyfills/intl-displaynames",permalink:"/docs/polyfills/intl-displaynames",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-displaynames.md",version:"current",sidebar:"polyfills",previous:{title:"Intl.DateTimeFormat (ESNext)",permalink:"/docs/polyfills/intl-datetimeformat"},next:{title:"Intl.getCanonicalLocales",permalink:"/docs/polyfills/intl-getcanonicallocales"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Features",id:"features",children:[]},{value:"Usage",id:"usage",children:[{value:"Via polyfill.io",id:"via-polyfillio",children:[]},{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]}],m={toc:p};function u(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A polyfill for ",Object(r.b)("a",{parentName:"p",href:"https://tc39.es/proposal-intl-displaynames"},Object(r.b)("inlineCode",{parentName:"a"},"Intl.DisplayNames")),"."),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://www.npmjs.org/package/@formatjs/intl-displaynames"},Object(r.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@formatjs/intl-displaynames.svg?style=flat-square",alt:"npm Version"})),"\n",Object(r.b)("img",{parentName:"p",src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-displaynames",alt:"size"})),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)(i.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(r.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"npm i @formatjs/intl-displaynames\n"))),Object(r.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @formatjs/intl-displaynames\n")))),Object(r.b)("h2",{id:"requirements"},"Requirements"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales"},Object(r.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales"))," or ",Object(r.b)("a",{parentName:"li",href:"/docs/polyfills/intl-getcanonicallocales"},"polyfill")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale"},Object(r.b)("inlineCode",{parentName:"a"},"Intl.Locale"))," or ",Object(r.b)("a",{parentName:"li",href:"/docs/polyfills/intl-locale"},"polyfill"),".")),Object(r.b)("h2",{id:"features"},"Features"),Object(r.b)("p",null,"Everything in ",Object(r.b)("a",{parentName:"p",href:"https://github.com/tc39/proposal-intl-displaynames"},"https://github.com/tc39/proposal-intl-displaynames"),"."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("h3",{id:"via-polyfillio"},"Via polyfill.io"),Object(r.b)("p",null,"You can use ",Object(r.b)("a",{parentName:"p",href:"https://polyfill.io/v3/url-builder/"},"polyfill.io URL Builder")," to create a polyfill script tag for ",Object(r.b)("inlineCode",{parentName:"p"},"Intl.DisplayNames"),". By default the created URL does not come with any locale data. In order to add locale data, append ",Object(r.b)("inlineCode",{parentName:"p"},"Intl.DisplayNames.~locale.<locale>")," to your list of features. For example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Polyfill Intl.DisplayNames, its dependencies & `en` locale data --\x3e\n<script src="https://polyfill.io/v3/polyfill.min.js?features=Intl.DisplayNames,Intl.DisplayNames.~locale.en"><\/script>\n')),Object(r.b)("h3",{id:"simple"},"Simple"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-displaynames/polyfill'\nimport '@formatjs/intl-displaynames/locale-data/en' // locale-data for en\n")),Object(r.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"import {shouldPolyfill} from '@formatjs/intl-displaynames/should-polyfill'\nasync function polyfill(locale: string) {\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-displaynames/polyfill')\n  }\n\n  if (Intl.DisplayNames.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-displaynames/locale-data/en')\n        break\n      case 'fr':\n        await import('@formatjs/intl-displaynames/locale-data/fr')\n        break\n    }\n  }\n}\n")))}u.isMDXComponent=!0}}]);