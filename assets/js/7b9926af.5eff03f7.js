"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1843],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var l=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),m=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=m(e.components);return l.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=m(a),u=n,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||i;return a?l.createElement(f,r(r({ref:t},p),{},{components:a})):l.createElement(f,r({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var m=2;m<i;m++)r[m]=a[m];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8215:(e,t,a)=>{a.d(t,{Z:()=>n});var l=a(7294);const n=function(e){var t=e.children,a=e.hidden,n=e.className;return l.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},6396:(e,t,a)=>{a.d(t,{Z:()=>d});var l=a(7462),n=a(7294),i=a(2389),r=a(9443);const o=function(){var e=(0,n.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=a(3616),m=a(6010);const p="tabItem_1uMI";function c(e){var t,a,i,r=e.lazy,c=e.block,d=e.defaultValue,u=e.values,f=e.groupId,h=e.className,v=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=u?u:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,s.lx)(y,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===d?d:null!=(t=null!=d?d:null==(a=v.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(i=v[0])?void 0:i.props.value;if(null!==g&&!y.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=o(),N=k.tabGroupChoices,w=k.setTabGroupChoices,T=(0,n.useState)(g),j=T[0],z=T[1],I=[],x=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var D=N[f];null!=D&&D!==j&&y.some((function(e){return e.value===D}))&&z(D)}var O=function(e){var t=e.currentTarget,a=I.indexOf(t),l=y[a].value;l!==j&&(x(t),z(l),null!=f&&w(f,l))},E=function(e){var t,a=null;switch(e.key){case"ArrowRight":var l=I.indexOf(e.currentTarget)+1;a=I[l]||I[0];break;case"ArrowLeft":var n=I.indexOf(e.currentTarget)-1;a=I[n]||I[I.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":c},h)},y.map((function(e){var t=e.value,a=e.label,i=e.attributes;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:function(e){return I.push(e)},onKeyDown:E,onFocus:O,onClick:O},i,{className:(0,m.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":j===t})}),null!=a?a:t)}))),r?(0,n.cloneElement)(v.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}function d(e){var t=(0,i.Z)();return n.createElement(c,(0,l.Z)({key:String(t)},e))}},8406:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>m,contentTitle:()=>p,metadata:()=>c,toc:()=>d,default:()=>f});var l=a(7462),n=a(3366),i=(a(7294),a(3905)),r=a(6396),o=a(8215),s=["components"],m={id:"intl-datetimeformat",title:"Intl.DateTimeFormat (ESNext)"},p=void 0,c={unversionedId:"polyfills/intl-datetimeformat",id:"polyfills/intl-datetimeformat",title:"Intl.DateTimeFormat (ESNext)",description:"A spec-compliant polyfill for Intl.DateTimeFormat fully tested by the official ECMAScript Conformance test suite",source:"@site/docs/polyfills/intl-datetimeformat.md",sourceDirName:"polyfills",slug:"/polyfills/intl-datetimeformat",permalink:"/docs/polyfills/intl-datetimeformat",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-datetimeformat.md",tags:[],version:"current",frontMatter:{id:"intl-datetimeformat",title:"Intl.DateTimeFormat (ESNext)"},sidebar:"polyfills",previous:{title:"Polyfills",permalink:"/docs/polyfills"},next:{title:"Intl.DisplayNames",permalink:"/docs/polyfills/intl-displaynames"}},d=[{value:"Features",id:"features",children:[],level:2},{value:"Installation",id:"installation",children:[],level:2},{value:"Requirements",id:"requirements",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Via polyfill.io",id:"via-polyfillio",children:[],level:3},{value:"Simple",id:"simple",children:[],level:3},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[],level:3},{value:"Adding IANA Timezone Database",id:"adding-iana-timezone-database",children:[{value:"Full: contains ALL Timezone from IANA database",id:"full-contains-all-timezone-from-iana-database",children:[],level:4},{value:"Golden: contains popular set of timezones from IANA database",id:"golden-contains-popular-set-of-timezones-from-iana-database",children:[],level:4}],level:3},{value:"Default Timezone",id:"default-timezone",children:[],level:3}],level:2},{value:"Tests",id:"tests",children:[],level:2}],u={toc:d};function f(e){var t=e.components,a=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A spec-compliant polyfill for Intl.DateTimeFormat fully tested by the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tc39/test262"},"official ECMAScript Conformance test suite")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.org/package/@formatjs/intl-datetimeformat"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@formatjs/intl-datetimeformat.svg?style=flat-square",alt:"npm Version"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-datetimeformat",alt:"size"})),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Right now we only support Gregorian calendar in this polyfill. Therefore we recommend setting ",(0,i.kt)("inlineCode",{parentName:"p"},"calendar: 'gregory'")," in your options to be safe."))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Right now this polyfill supports daylight transition until 2100 to reduce the dataset size"))),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tc39/proposal-intl-datetime-style"},"dateStyle/timeStyle")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/tc39/proposal-intl-DateTimeFormat-formatRange"},"formatRange"))),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)(r.Z,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm i @formatjs/intl-datetimeformat\n"))),(0,i.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @formatjs/intl-datetimeformat\n")))),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"This package requires the following capabilities:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales"},(0,i.kt)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales"))," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/polyfills/intl-getcanonicallocales"},"polyfill")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale"},(0,i.kt)("inlineCode",{parentName:"a"},"Intl.Locale"))," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/polyfills/intl-locale"},"polyfill"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat"},(0,i.kt)("inlineCode",{parentName:"a"},"Intl.NumberFormat"))," or ",(0,i.kt)("a",{parentName:"li",href:"/docs/polyfills/intl-numberformat"},"polyfill"),".")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"via-polyfillio"},"Via polyfill.io"),(0,i.kt)("p",null,"You can use ",(0,i.kt)("a",{parentName:"p",href:"https://polyfill.io/v3/url-builder/"},"polyfill.io URL Builder")," to create a polyfill script tag for ",(0,i.kt)("inlineCode",{parentName:"p"},"Intl.DateTimeFormat"),". By default the created URL does not come with any locale data. In order to add locale data, append ",(0,i.kt)("inlineCode",{parentName:"p"},"Intl.DateTimeFormat.~locale.<locale>"),", as well as locale data for any required polyfills, to your list of features. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Polyfill Intl.DateTimeFormat, its dependencies & `en` locale data --\x3e\n<script src="https://polyfill.io/v3/polyfill.min.js?features=Intl.DateTimeFormat,Intl.DateTimeFormat.~locale.en,Intl.NumberFormat.~locale.en"><\/script>\n')),(0,i.kt)("h3",{id:"simple"},"Simple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-datetimeformat/polyfill'\nimport '@formatjs/intl-datetimeformat/locale-data/en' // locale-data for en\nimport '@formatjs/intl-datetimeformat/add-all-tz' // Add ALL tz data\n")),(0,i.kt)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import {shouldPolyfill} from '@formatjs/intl-datetimeformat/should-polyfill'\nasync function polyfill(locale: string) {\n  const unsupportedLocale = shouldPolyfill(locale)\n  // This locale is supported\n  if (!unsupportedLocale) {\n    return\n  }\n  // Load the polyfill 1st BEFORE loading data\n  await import('@formatjs/intl-datetimeformat/polyfill-force')\n\n  // Parallelize CLDR data loading\n  const dataPolyfills = [\n    import('@formatjs/intl-datetimeformat/add-all-tz'),\n    import(`@formatjs/intl-datetimeformat/locale-data/${unsupportedLocale}`),\n  ]\n  await Promise.all(dataPolyfills)\n}\n")),(0,i.kt)("h3",{id:"adding-iana-timezone-database"},"Adding IANA Timezone Database"),(0,i.kt)("p",null,"We provide 2 pre-processed IANA Timezone:"),(0,i.kt)("h4",{id:"full-contains-all-timezone-from-iana-database"},"Full: contains ALL Timezone from IANA database"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-datetimeformat/polyfill'\nimport '@formatjs/intl-datetimeformat/add-all-tz'\n")),(0,i.kt)("h4",{id:"golden-contains-popular-set-of-timezones-from-iana-database"},"Golden: contains popular set of timezones from IANA database"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-datetimeformat/polyfill'\nimport '@formatjs/intl-datetimeformat/add-golden-tz'\n")),(0,i.kt)("h3",{id:"default-timezone"},"Default Timezone"),(0,i.kt)("p",null,"Since JS Engines do not expose default timezone, there's currently no way for us to detect local timezone that a browser is in. Therefore, the default timezone in this polyfill is ",(0,i.kt)("inlineCode",{parentName:"p"},"UTC"),"."),(0,i.kt)("p",null,"You can change this by either calling ",(0,i.kt)("inlineCode",{parentName:"p"},"__setDefaultTimeZone")," or always explicitly pass in ",(0,i.kt)("inlineCode",{parentName:"p"},"timeZone")," option for accurate date time calculation."),(0,i.kt)("p",null,"Since ",(0,i.kt)("inlineCode",{parentName:"p"},"__setDefaultTimeZone")," is not in the spec, you should make sure to check for its existence before calling it & after tz data has been loaded, e.g:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-datetimeformat/polyfill'\nimport '@formatjs/intl-datetimeformat/add-all-tz.js'\n\nif ('__setDefaultTimeZone' in Intl.DateTimeFormat) {\n  Intl.DateTimeFormat.__setDefaultTimeZone('America/Los_Angeles')\n}\n")),(0,i.kt)("h2",{id:"tests"},"Tests"),(0,i.kt)("p",null,"This library is fully ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tc39/test262/tree/master/test/intl402/DateTimeFormat"},"test262"),"-compliant."))}f.isMDXComponent=!0}}]);