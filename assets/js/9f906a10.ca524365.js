(self.webpackChunk=self.webpackChunk||[]).push([[9581],{3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,m=p["".concat(s,".").concat(g)]||p[g]||d[g]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9689:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>c,toc:()=>u,default:()=>p});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),o=["components"],l={id:"upgrade-guide-5x",title:"Upgrade Guide (v4 -> v5)"},s=void 0,c={unversionedId:"react-intl/upgrade-guide-5x",id:"react-intl/upgrade-guide-5x",isDocsHomePage:!1,title:"Upgrade Guide (v4 -> v5)",description:"Breaking API Changes",source:"@site/docs/react-intl/upgrade-guide-5.x.md",sourceDirName:"react-intl",slug:"/react-intl/upgrade-guide-5x",permalink:"/docs/react-intl/upgrade-guide-5x",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/react-intl/upgrade-guide-5.x.md",tags:[],version:"current",frontMatter:{id:"upgrade-guide-5x",title:"Upgrade Guide (v4 -> v5)"},sidebar:"api",previous:{title:"Imperative API",permalink:"/docs/react-intl/api"},next:{title:"Upgrade Guide (v3 -> v4)",permalink:"/docs/react-intl/upgrade-guide-4x"}},u=[{value:"Breaking API Changes",id:"breaking-api-changes",children:[]},{value:"Why are we doing those changes?",id:"why-are-we-doing-those-changes",children:[{value:"Rich text formatting callback function is no longer variadic",id:"rich-text-formatting-callback-function-is-no-longer-variadic",children:[]},{value:"<code>FormattedMessage</code> render prop is no longer variadic",id:"formattedmessage-render-prop-is-no-longer-variadic",children:[]},{value:"Using <code>FormattedMessage</code> without a <code>intl</code> context will fail fast",id:"using-formattedmessage-without-a-intl-context-will-fail-fast",children:[]}]}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"breaking-api-changes"},"Breaking API Changes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rich text formatting callback function is no longer variadic.")),(0,i.kt)("p",null,"Before:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"new IntlMessageFormat('a<b>strong</b>').format({\n  b: (...chunks) => <strong>{chunks}</strong>,\n})\n")),(0,i.kt)("p",null,"After:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"new IntlMessageFormat('a<b>strong</b>').format({\n  b: chunks => <strong>{chunks}</strong>,\n})\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FormattedMessage")," render prop is no longer variadic.")),(0,i.kt)("p",null,"Before:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<FormattedMessage defaultMessage="a<b>strong</b>">\n  {(...chunks) => <b>{chunks}</b>}\n</FormattedMessage>\n')),(0,i.kt)("p",null,"After:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'<FormattedMessage defaultMessage="a<b>strong</b>">\n  {chunks => <b>{chunks}</b>}\n</FormattedMessage>\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using ",(0,i.kt)("inlineCode",{parentName:"li"},"FormattedMessage")," without a ",(0,i.kt)("inlineCode",{parentName:"li"},"intl")," context will fail fast.")),(0,i.kt)("h2",{id:"why-are-we-doing-those-changes"},"Why are we doing those changes?"),(0,i.kt)("h3",{id:"rich-text-formatting-callback-function-is-no-longer-variadic"},"Rich text formatting callback function is no longer variadic"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We received feedback from the community that variadic callback function isn't really ergonomic."),(0,i.kt)("li",{parentName:"ul"},"There's also an issue where React ",(0,i.kt)("inlineCode",{parentName:"li"},"chunks")," do not come with keys, thus causing warning in React during development."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"chunks")," by themselves are not enough to render duplicate tags, such as ",(0,i.kt)("inlineCode",{parentName:"li"},"<a>link</a> and another <a>link</a>")," where you want to render 2 different ",(0,i.kt)("inlineCode",{parentName:"li"},"href"),"s for the ",(0,i.kt)("inlineCode",{parentName:"li"},"<a>")," tag. In this case ",(0,i.kt)("inlineCode",{parentName:"li"},"a: chunks => <a>{chunks}</a>")," isn't enough especially when the contents are the same. In the future we can set another argument that might contain metadata to distinguish between the 2 elements.")),(0,i.kt)("h3",{id:"formattedmessage-render-prop-is-no-longer-variadic"},(0,i.kt)("inlineCode",{parentName:"h3"},"FormattedMessage")," render prop is no longer variadic"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Same reasons as above.")),(0,i.kt)("h3",{id:"using-formattedmessage-without-a-intl-context-will-fail-fast"},"Using ",(0,i.kt)("inlineCode",{parentName:"h3"},"FormattedMessage")," without a ",(0,i.kt)("inlineCode",{parentName:"h3"},"intl")," context will fail fast"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This also comes from Dropbox internal developer feedback. ",(0,i.kt)("inlineCode",{parentName:"li"},"FormattedMessage")," has a default English renderer that masks ",(0,i.kt)("inlineCode",{parentName:"li"},"Provider")," setup issues which causes them to not be handled during testing phase.")))}p.isMDXComponent=!0}}]);