"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1526],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?a.createElement(g,l(l({ref:n},c),{},{components:t})):a.createElement(g,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(7294);const r=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},6396:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(7462),r=t(7294),i=t(2389),l=t(9443);const o=function(){var e=(0,r.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=t(3616),u=t(6010);const c="tabItem_1uMI";function p(e){var n,t,i,l=e.lazy,p=e.block,d=e.defaultValue,m=e.values,g=e.groupId,h=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:v.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,s.lx)(f,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(n=null!=d?d:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=v[0])?void 0:i.props.value;if(null!==k&&!f.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=o(),w=y.tabGroupChoices,N=y.setTabGroupChoices,j=(0,r.useState)(k),C=j[0],T=j[1],I=[],O=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var x=w[g];null!=x&&x!==C&&f.some((function(e){return e.value===x}))&&T(x)}var E=function(e){var n=e.currentTarget,t=I.indexOf(n),a=f[t].value;a!==C&&(O(n),T(a),null!=g&&N(g,a))},P=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=I.indexOf(e.currentTarget)+1;t=I[a]||I[0];break;case"ArrowLeft":var r=I.indexOf(e.currentTarget)-1;t=I[r]||I[I.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":p},h)},f.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,key:n,ref:function(e){return I.push(e)},onKeyDown:P,onFocus:E,onClick:E},i,{className:(0,u.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":C===n})}),null!=t?t:n)}))),l?(0,r.cloneElement)(v.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},v.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==C})}))))}function d(e){var n=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},4148:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>u,contentTitle:()=>c,metadata:()=>p,toc:()=>d,default:()=>g});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=t(6396),o=t(8215),s=["components"],u={id:"distribute-libraries",title:"Distributing i18n-friendly libraries"},c=void 0,p={unversionedId:"guides/distribute-libraries",id:"guides/distribute-libraries",title:"Distributing i18n-friendly libraries",description:"In larger scale applications/monorepos, not all components/libraries live within the same repo/project and they might get distributed differently. While there are multiple ways to solve this problem, this guide aims to provide a guidance that we've seen working quite well with large engineering orgs.",source:"@site/docs/guides/distribute-libraries.md",sourceDirName:"guides",slug:"/guides/distribute-libraries",permalink:"/docs/guides/distribute-libraries",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/guides/distribute-libraries.md",tags:[],version:"current",frontMatter:{id:"distribute-libraries",title:"Distributing i18n-friendly libraries"},sidebar:"docs",previous:{title:"Testing with formatjs",permalink:"/docs/guides/testing"},next:{title:"Runtime Requirements",permalink:"/docs/guides/runtime-requirements"}},d=[{value:"High level concept",id:"high-level-concept",children:[],level:2},{value:"Declaring in package.json",id:"declaring-in-packagejson",children:[],level:2},{value:"Declaring with a convention",id:"declaring-with-a-convention",children:[],level:2},{value:"Passing down <code>intl</code> object",id:"passing-down-intl-object",children:[],level:2}],m={toc:d};function g(e){var n=e.components,u=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,u,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In larger scale applications/monorepos, not all components/libraries live within the same repo/project and they might get distributed differently. While there are multiple ways to solve this problem, this guide aims to provide a guidance that we've seen working quite well with large engineering orgs."),(0,i.kt)("h2",{id:"high-level-concept"},"High level concept"),(0,i.kt)("p",null,"Translated strings are basically assets, just like CSS, static configuration or images. The high level structure typically contains several layers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Reusable Components/Libraries that have translated strings, which can be nested."),(0,i.kt)("li",{parentName:"ul"},"Consuming higher-level applications that consumes those components/libraries.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Distribution Hierarchy",src:t(500).Z})),(0,i.kt)("p",null,"Each feature/library would be in charge of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/getting-started/message-declaration"},"Declaring its messages"),"."),(0,i.kt)("li",{parentName:"ul"},"Integrating with the ",(0,i.kt)("a",{parentName:"li",href:"/docs/getting-started/application-workflow"},"translation pipeline"),"."),(0,i.kt)("li",{parentName:"ul"},"Declaring its translated & aggregated strings using either a ",(0,i.kt)("a",{parentName:"li",href:"https://docs.npmjs.com/files/package.json"},"manifest like package.json")," or a convention (always output to a specific location) or both.")),(0,i.kt)("h2",{id:"declaring-in-packagejson"},"Declaring in package.json"),(0,i.kt)("p",null,"This is similar to using ",(0,i.kt)("inlineCode",{parentName:"p"},"style")," attribute to declare CSS. You can declare something like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "my-library",\n  "version": "1.0.0",\n  "lang": "my-strings",\n  "supportedLocales": ["en", "en-GB", "ja"]\n}\n')),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"my-strings")," is the folder containing your translated strings in your ",(0,i.kt)("inlineCode",{parentName:"p"},"supportedLocales"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"my-strings\n|- en.json\n|- en-GB.json\n|- ja.json\n")),(0,i.kt)("p",null,"Consuming application can walk through ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules")," looking for ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," files with these fields and aggregate the strings together into a single bundle (or multiple bundles) and serve those JSON however it chooses to."),(0,i.kt)("p",null,"This provides flexibility to output translations to any location you want as long as it's declared in ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),". However, this also incurs additional processing cost at the application level and also encourages inconsistency in output location."),(0,i.kt)("h2",{id:"declaring-with-a-convention"},"Declaring with a convention"),(0,i.kt)("p",null,"This is similar to ",(0,i.kt)("a",{parentName:"p",href:"#declaring-in-packagejson"},"Declaring in package.json"),", except translation is always output to ",(0,i.kt)("inlineCode",{parentName:"p"},"lang/{locale}.json"),". Upstream application can do"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'formatjs compile "node_modules/**/lang/en.json" --ast --out-file lang/en.json\n')),(0,i.kt)("p",null,"to aggregate all its libraries' pre-translated strings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"my-lib\n|- src\n|- lang\n    |- en.json\n    |- en-GB.json\n    |- ja.json\n|- node_modules\n    |- library1\n        |- lang\n            |- en.json\n            |- en-GB.json\n            |- ja.json\n    |- library2\n        |- lang\n            |- en.json\n            |- en-GB.json\n            |- ja.json\n")),(0,i.kt)("p",null,"This provides consistency and minimize processing cost of different manifest files but also is less flexible."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"We've seen ",(0,i.kt)("inlineCode",{parentName:"p"},"convention")," approach working better in large engineering org due to enforcement of convention & structure while ",(0,i.kt)("inlineCode",{parentName:"p"},"manifest")," approach working in a more open environment."))),(0,i.kt)("h2",{id:"passing-down-intl-object"},"Passing down ",(0,i.kt)("inlineCode",{parentName:"h2"},"intl")," object"),(0,i.kt)("p",null,"The core of a i18n application is the ",(0,i.kt)("inlineCode",{parentName:"p"},"intl")," object, which contains precompiled messages, locale settings, format settings and cache. Therefore, this should only be initialized at the top level in the application."),(0,i.kt)("p",null,"Component libraries can declare ",(0,i.kt)("inlineCode",{parentName:"p"},"intl: IntlShape")," as a prop and subsequently pass it down directly like:"),(0,i.kt)(l.Z,{groupId:"engine",defaultValue:"react",values:[{label:"React",value:"react"},{label:"Vue3",value:"vue"}],mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"react",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import {IntlShape} from 'react-intl'\nimport {MyButton, MyForm} from 'my-components'\ninterface Props {\n  intl: IntlShape\n}\n\nfunction MyFeature(props: Props) {\n  return (\n    <div>\n      <MyButton intl={props.intl} />\n      <MyForm intl={props.intl} />\n    </div>\n  )\n}\n")),(0,i.kt)("p",null,"or passing down via ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," using ",(0,i.kt)("inlineCode",{parentName:"p"},"RawIntlProvider"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import {IntlShape, RawIntlProvider} from 'react-intl'\nimport {MyButton, MyForm} from 'my-components'\ninterface Props {\n  intl: IntlShape\n}\n\nfunction MyFeature(props: Props) {\n  return (\n    <RawIntlProvider value={intl}>\n      <MyButton />\n      <MyForm />\n    </RawIntlProvider>\n  )\n}\n"))),(0,i.kt)(o.Z,{value:"vue",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {useIntl} from 'vue-intl'\n\nconst MyFeature = {\n  setup() {\n    const intl = useIntl()\n    return () =>\n      h(\n        'p',\n        {},\n        intl.formatMessage({\n          id: 'foo',\n          defaultMessage: 'Hello',\n        })\n      )\n  },\n}\n")),(0,i.kt)("p",null,"or passing down via ",(0,i.kt)("inlineCode",{parentName:"p"},"provideIntl")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {createIntl} from '@formatjs/intl'\nimport {provideIntl, useIntl} from 'vue-intl'\n\nconst Ancestor = {\n  setup() {\n    provideIntl(\n      createIntl({\n        locale: 'en',\n        defaultLocale: 'en',\n        messages: {\n          foo: 'Composed',\n        },\n      })\n    )\n  },\n  render() {\n    return h(MyFeature)\n  },\n}\n")))))}g.isMDXComponent=!0},500:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/distribute-libs-6dd93d10e579935a5db51016ef6e7404.svg"}}]);