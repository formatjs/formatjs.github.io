(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{105:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),m=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=m(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=m(n),u=r,d=b["".concat(l,".").concat(u)]||b[u]||s[u]||i;return n?a.a.createElement(d,o(o({ref:t},p),{},{components:n})):a.a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return m}));var r=n(2),a=n(6),i=(n(0),n(105)),l={id:"intl-numberformat",title:"Intl.NumberFormat (ES2020)"},o={unversionedId:"polyfills/intl-numberformat",id:"polyfills/intl-numberformat",isDocsHomePage:!1,title:"Intl.NumberFormat (ES2020)",description:"A polyfill for ES2020 Intl.NumberFormat and Number.prototype.toLocaleString.",source:"@site/docs/polyfills/intl-numberformat.md",permalink:"/docs/polyfills/intl-numberformat",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-numberformat.md",sidebar:"polyfills",previous:{title:"Intl.DisplayNames",permalink:"/docs/polyfills/intl-displaynames"},next:{title:"Intl.DateTimeFormat",permalink:"/docs/polyfills/intl-datetimeformat"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Features",id:"features",children:[]},{value:"Usage",id:"usage",children:[{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]},{value:"Supported Units",id:"supported-units",children:[{value:"Simple Units",id:"simple-units",children:[]},{value:"Compound Units",id:"compound-units",children:[]}]}],p={rightToc:c};function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A polyfill for ES2020 ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://tc39.es/ecma402/#numberformat-objects"}),Object(i.b)("inlineCode",{parentName:"a"},"Intl.NumberFormat"))," and ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString"}),Object(i.b)("inlineCode",{parentName:"a"},"Number.prototype.toLocaleString")),"."),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.npmjs.org/package/@formatjs/intl-numberformat"}),Object(i.b)("img",Object(r.a)({parentName:"a"},{src:"https://img.shields.io/npm/v/@formatjs/intl-numberformat.svg?style=flat-square",alt:"npm Version"}))),"\n",Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-numberformat",alt:"size"}))),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"npm install @formatjs/intl-numberformat\n")),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("p",null,"This package requires the following capabilities:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules"}),Object(i.b)("inlineCode",{parentName:"a"},"Intl.PluralRules")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If you're supporting IE11-, this requires ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/polyfills/intl-getcanonicallocales"}),Object(i.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales")),"."))),Object(i.b)("h2",{id:"features"},"Features"),Object(i.b)("p",null,"Everything in the ES2020 Internationalization API spec (",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://tc39.es/ecma402"}),"https://tc39.es/ecma402"),")."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h3",{id:"simple"},"Simple"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import '@formatjs/intl-numberformat/polyfill'\nimport '@formatjs/intl-numberformat/locale-data/en' // locale-data for en\n")),Object(i.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import {shouldPolyfill} from '@formatjs/intl-numberformat/should-polyfill'\nasync function polyfill(locale: string) {\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-numberformat/polyfill')\n  }\n  if (Intl.NumberFormat.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-numberformat/locale-data/en')\n        break\n      case 'fr':\n        await import('@formatjs/intl-numberformat/locale-data/fr')\n        break\n    }\n  }\n}\n")),Object(i.b)("h2",{id:"supported-units"},"Supported Units"),Object(i.b)("h3",{id:"simple-units"},"Simple Units"),Object(i.b)("p",null,"Currently ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier"}),"the spec")," defines a list of sanctioned units as below."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"type Unit =\n  | 'acre'\n  | 'bit'\n  | 'byte'\n  | 'celsius'\n  | 'centimeter'\n  | 'day'\n  | 'degree'\n  | 'fahrenheit'\n  | 'fluid-ounce'\n  | 'foot'\n  | 'gallon'\n  | 'gigabit'\n  | 'gigabyte'\n  | 'gram'\n  | 'hectare'\n  | 'hour'\n  | 'inch'\n  | 'kilobit'\n  | 'kilobyte'\n  | 'kilogram'\n  | 'kilometer'\n  | 'liter'\n  | 'megabit'\n  | 'megabyte'\n  | 'meter'\n  | 'mile'\n  | 'mile-scandinavian'\n  | 'millimeter'\n  | 'milliliter'\n  | 'millisecond'\n  | 'minute'\n  | 'month'\n  | 'ounce'\n  | 'percent'\n  | 'petabyte'\n  | 'pound'\n  | 'second'\n  | 'stone'\n  | 'terabit'\n  | 'terabyte'\n  | 'week'\n  | 'yard'\n  | 'year'\n")),Object(i.b)("h3",{id:"compound-units"},"Compound Units"),Object(i.b)("p",null,"You can specify ",Object(i.b)("inlineCode",{parentName:"p"},"X-per-Y")," unit, where ",Object(i.b)("inlineCode",{parentName:"p"},"X")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Y")," are sactioned simple units (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"kilometer-per-hour"),").\nThe library will choose the best-fit localized pattern to format this compound unit."))}m.isMDXComponent=!0}}]);