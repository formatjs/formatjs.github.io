(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{105:function(e,t,l){"use strict";l.d(t,"a",(function(){return u})),l.d(t,"b",(function(){return b}));var n=l(0),r=l.n(n);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function c(e,t){if(null==e)return{};var l,n,r=function(e,t){if(null==e)return{};var l,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||(r[l]=e[l]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)l=a[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},u=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(l),m=n,b=u["".concat(i,".").concat(m)]||u[m]||f[m]||a;return l?r.a.createElement(b,o(o({ref:t},p),{},{components:l})):r.a.createElement(b,o({ref:t},p))}));function b(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=l.length,i=new Array(a);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<a;p++)i[p]=l[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,l)}m.displayName="MDXCreateElement"},90:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return i})),l.d(t,"metadata",(function(){return o})),l.d(t,"rightToc",(function(){return c})),l.d(t,"default",(function(){return s}));var n=l(2),r=l(6),a=(l(0),l(105)),i={id:"intl-pluralrules",title:"Intl.PluralRules"},o={unversionedId:"polyfills/intl-pluralrules",id:"polyfills/intl-pluralrules",isDocsHomePage:!1,title:"Intl.PluralRules",description:"A spec-compliant polyfill for Intl.PluralRules fully tested by the official ECMAScript Conformance test suite",source:"@site/docs/polyfills/intl-pluralrules.md",permalink:"/docs/polyfills/intl-pluralrules",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-pluralrules.md",sidebar:"polyfills",previous:{title:"Intl.getCanonicalLocales",permalink:"/docs/polyfills/intl-getcanonicallocales"},next:{title:"Intl.RelativeTimeFormat",permalink:"/docs/polyfills/intl-relativetimeformat"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]}],p={rightToc:c};function s(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,l,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A spec-compliant polyfill for ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules"}),Object(a.b)("inlineCode",{parentName:"a"},"Intl.PluralRules"))," fully tested by the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/tc39/test262"}),"official ECMAScript Conformance test suite")),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.npmjs.org/package/@formatjs/intl-pluralrules"}),Object(a.b)("img",Object(n.a)({parentName:"a"},{src:"https://img.shields.io/npm/v/@formatjs/intl-pluralrules.svg?style=flat-square",alt:"npm Version"}))),"\n",Object(a.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-pluralrules",alt:"size"}))),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"npm install @formatjs/intl-pluralrules\n")),Object(a.b)("h2",{id:"requirements"},"Requirements"),Object(a.b)("p",null,"If you're supporting IE11-, this requires ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/polyfills/intl-getcanonicallocales"}),Object(a.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales")),"."),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("h3",{id:"simple"},"Simple"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"import '@formatjs/intl-pluralrules/polyfill'\nimport '@formatjs/intl-pluralrules/locale-data/en' // locale-data for en\n")),Object(a.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-tsx"}),"import {shouldPolyfill} from '@formatjs/intl-pluralrules/should-polyfill'\nasync function polyfill(locale: string) {\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-pluralrules/polyfill')\n  }\n\n  if (Intl.PluralRules.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-pluralrules/locale-data/en')\n        break\n      case 'fr':\n        await import('@formatjs/intl-pluralrules/locale-data/fr')\n        break\n    }\n  }\n}\n")))}s.isMDXComponent=!0}}]);