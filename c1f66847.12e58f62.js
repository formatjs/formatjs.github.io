(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{108:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(n),m=a,d=b["".concat(i,".").concat(m)]||b[m]||p[m]||o;return n?r.a.createElement(d,s(s({ref:t},c),{},{components:n})):r.a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},109:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},110:function(e,t,n){"use strict";var a=n(0);const r=Object(a.createContext)(void 0);t.a=r},111:function(e,t,n){"use strict";var a=n(0),r=n(110);t.a=function(){const e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},112:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(111),i=n(109),s=n(48),l=n.n(s);const c=37,u=39;t.a=function(e){const{block:t,children:n,defaultValue:s,values:b,groupId:p}=e,{tabGroupChoices:m,setTabGroupChoices:d}=Object(o.a)(),[g,f]=Object(a.useState)(s),[j,O]=Object(a.useState)(!1);if(null!=p){const e=m[p];null!=e&&e!==g&&b.some(t=>t.value===e)&&f(e)}const h=e=>{f(e),null!=p&&d(p,e)},v=[],y=e=>{e.metaKey||e.altKey||e.ctrlKey||O(!0)},w=()=>{O(!1)};return Object(a.useEffect)(()=>{window.addEventListener("keydown",y),window.addEventListener("mousedown",w)},[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},b.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===e,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===e}),style:j?{}:{outline:"none"},key:e,ref:e=>v.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case u:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(v,e.target,e),y(e)},onFocus:()=>h(e),onClick:()=>{h(e),O(!1)},onPointerDown:()=>O(!1)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter(e=>e.props.value===g)[0]))}},113:function(e,t,n){"use strict";var a=n(0),r=n.n(a);t.a=function(e){return r.a.createElement("div",null,e.children)}},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),o=(n(0),n(108)),i=n(112),s=n(113),l={id:"bundler-plugins",title:"Bundling with formatjs"},c={unversionedId:"guides/bundler-plugins",id:"guides/bundler-plugins",isDocsHomePage:!1,title:"Bundling with formatjs",description:"Now that you've had a working pipeline. It's time to dive deeper on how to optimize the build with formatjs. From Message Extraction guide, we explicitly recommend against explicit ID due to potential collision in large application. While our extractor can insert IDs in the extracted JSON file, you'd need to also insert those IDs into the compiled JS output. This guide will cover how to do that.",source:"@site/docs/guides/bundler-plugins.mdx",slug:"/guides/bundler-plugins",permalink:"/docs/guides/bundler-plugins",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/guides/bundler-plugins.mdx",version:"current",sidebar:"docs",previous:{title:"Develop with formatjs",permalink:"/docs/guides/develop"},next:{title:"Testing with formatjs",permalink:"/docs/guides/testing"}},u=[{value:"Using babel-plugin-react-intl",id:"using-babel-plugin-react-intl",children:[]},{value:"Using @formatjs/ts-transformer",id:"using-formatjsts-transformer",children:[{value:"ts-loader",id:"ts-loader",children:[]}]}],b={rightToc:u};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Now that you've had a working pipeline. It's time to dive deeper on how to optimize the build with ",Object(o.b)("inlineCode",{parentName:"p"},"formatjs"),". From ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/getting-started/message-extraction"}),"Message Extraction")," guide, we explicitly recommend against explicit ID due to potential collision in large application. While our extractor can insert IDs in the extracted JSON file, you'd need to also insert those IDs into the compiled JS output. This guide will cover how to do that."),Object(o.b)("h2",{id:"using-babel-plugin-react-intl"},"Using babel-plugin-react-intl"),Object(o.b)(i.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"npm",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm i -D babel-plugin-react-intl\n"))),Object(o.b)(s.a,{value:"yarn",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add -D babel-plugin-react-intl\n")))),Object(o.b)("p",null,"Let's take this simple example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import {FormattedMessage} from \'react-intl\'\n\n<FormattedMessage\n  description="A message"\n  defaultMessage="My name is {name}"\n  values={{\n    name: userName,\n  }}\n/>\n')),Object(o.b)("p",null,"During runtime this will throw an ",Object(o.b)("inlineCode",{parentName:"p"},"Error")," saying ",Object(o.b)("inlineCode",{parentName:"p"},"ID is required"),". In order to inject an ID in the transpiled JS, you can use our ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/tooling/babel-plugin"}),"babel-plugin-react-intl")," similarly as below:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"babel.config.json")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "plugins": [\n    [\n      "react-intl",\n      {\n        "extractFromFormatMessageCall": true,\n        "idInterpolationPattern": "[sha512:contenthash:base64:6]",\n        "ast": true\n      }\n    ]\n  ]\n}\n')),Object(o.b)("p",null,"This will produce the following JS"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const {FormattedMessage} = require('react-intl')\n\nReact.createElement(FormattedMessage, {\n  id: '179jda',\n  defaultMessage: 'My name is {name}',\n  values: {\n    name: userName,\n  },\n})\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"description")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Our plugin also removes ",Object(o.b)("inlineCode",{parentName:"p"},"description")," because it's only for translator, not end-user."))),Object(o.b)("h2",{id:"using-formatjsts-transformer"},"Using @formatjs/ts-transformer"),Object(o.b)(i.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"npm",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm i -D @formatjs/ts-transformer\n"))),Object(o.b)(s.a,{value:"yarn",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add -D @formatjs/ts-transformer\n")))),Object(o.b)("p",null,"If you're using TypeScript, in order to enable custom AST transformer you should consider using ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/cevek/ttypescript"}),"ttypescript"),", ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/TypeStrong/ts-loader"}),"ts-loader")," or similar."),Object(o.b)("p",null,"Let's take this simple example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import {FormattedMessage} from \'react-intl\'\n\n<FormattedMessage\n  description="A message"\n  defaultMessage="My name is {name}"\n  values={{\n    name: userName,\n  }}\n/>\n')),Object(o.b)("h3",{id:"ts-loader"},"ts-loader"),Object(o.b)("p",null,"You can add this in your webpack config ",Object(o.b)("inlineCode",{parentName:"p"},"ts-loader"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import {transform} from '@formatjs/ts-transformer'\n// webpack config\nmodule.exports = {\n  rules: [\n    {\n      test: /\\.tsx?$/,\n      use: [\n        {\n          loader: 'ts-loader',\n          options: {\n            getCustomTransformers() {\n              return {\n                before: [\n                  transform({\n                    extractFromFormatMessageCall: true,\n                    overrideIdFn: '[sha512:contenthash:base64:6]',\n                  }),\n                ],\n              }\n            },\n          },\n        },\n      ],\n      exclude: /node_modules/,\n    },\n  ],\n}\n")),Object(o.b)("p",null,"This will produce the following JS"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const {FormattedMessage} = require('react-intl')\n\nReact.createElement(FormattedMessage, {\n  id: '179jda',\n  defaultMessage: 'My name is {name}',\n  values: {\n    name: userName,\n  },\n})\n")),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"description")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Our transformer also removes ",Object(o.b)("inlineCode",{parentName:"p"},"description")," because it's only for translator, not end-user."))))}p.isMDXComponent=!0}}]);