(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{108:function(t,e,n){"use strict";n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return b}));var a=n(0),r=n.n(a);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=r.a.createContext({}),u=function(t){var e=r.a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},f=function(t){var e=u(t.components);return r.a.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},m=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),f=u(n),m=a,b=f["".concat(l,".").concat(m)]||f[m]||p[m]||i;return n?r.a.createElement(b,o(o({ref:e},s),{},{components:n})):r.a.createElement(b,o({ref:e},s))}));function b(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},109:function(t,e,n){"use strict";function a(t){var e,n,r="";if("string"==typeof t||"number"==typeof t)r+=t;else if("object"==typeof t)if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(n=a(t[e]))&&(r&&(r+=" "),r+=n);else for(e in t)t[e]&&(r&&(r+=" "),r+=e);return r}e.a=function(){for(var t,e,n=0,r="";n<arguments.length;)(t=arguments[n++])&&(e=a(t))&&(r&&(r+=" "),r+=e);return r}},110:function(t,e,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);e.a=r},111:function(t,e,n){"use strict";var a=n(0),r=n(110);e.a=function(){var t=Object(a.useContext)(r.a);if(null==t)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return t}},112:function(t,e,n){"use strict";var a=n(0),r=n.n(a),i=n(111),l=n(109),o=n(48),c=n.n(o),s=37,u=39;e.a=function(t){var e=t.block,n=t.children,o=t.defaultValue,f=t.values,p=t.groupId,m=Object(i.a)(),b=m.tabGroupChoices,d=m.setTabGroupChoices,y=Object(a.useState)(o),j=y[0],O=y[1],v=Object(a.useState)(!1),h=v[0],g=v[1];if(null!=p){var w=b[p];null!=w&&w!==j&&f.some((function(t){return t.value===w}))&&O(w)}var E=function(t){O(t),null!=p&&d(p,t)},N=[],T=function(t){t.metaKey||t.altKey||t.ctrlKey||g(!0)},x=function(){g(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",T),window.addEventListener("mousedown",x)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":e})},f.map((function(t){var e=t.value,n=t.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===e,className:Object(l.a)("tabs__item",c.a.tabItem,{"tabs__item--active":j===e}),style:h?{}:{outline:"none"},key:e,ref:function(t){return N.push(t)},onKeyDown:function(t){!function(t,e,n){switch(n.keyCode){case u:!function(t,e){var n=t.indexOf(e)+1;t[n]?t[n].focus():t[0].focus()}(t,e);break;case s:!function(t,e){var n=t.indexOf(e)-1;t[n]?t[n].focus():t[t.length-1].focus()}(t,e)}}(N,t.target,t),T(t)},onFocus:function(){return E(e)},onClick:function(){E(e),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(t){return t.props.value===j}))[0]))}},113:function(t,e,n){"use strict";var a=n(0),r=n.n(a);e.a=function(t){return r.a.createElement("div",null,t.children)}},89:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return c})),n.d(e,"metadata",(function(){return s})),n.d(e,"rightToc",(function(){return u})),n.d(e,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(108)),l=n(112),o=n(113),c={id:"intl-listformat",title:"Intl.ListFormat"},s={unversionedId:"polyfills/intl-listformat",id:"polyfills/intl-listformat",isDocsHomePage:!1,title:"Intl.ListFormat",description:"A spec-compliant polyfill for Intl.ListFormat fully tested by the official ECMAScript Conformance test suite",source:"@site/docs/polyfills/intl-listformat.md",slug:"/polyfills/intl-listformat",permalink:"/docs/polyfills/intl-listformat",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-listformat.md",version:"current",sidebar:"polyfills",previous:{title:"Intl.RelativeTimeFormat",permalink:"/docs/polyfills/intl-relativetimeformat"},next:{title:"Intl.DisplayNames",permalink:"/docs/polyfills/intl-displaynames"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]},{value:"Tests",id:"tests",children:[]}],f={rightToc:u};function p(t){var e=t.components,n=Object(r.a)(t,["components"]);return Object(i.b)("wrapper",Object(a.a)({},f,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A spec-compliant polyfill for Intl.ListFormat fully tested by the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/tc39/test262"}),"official ECMAScript Conformance test suite")),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.org/package/@formatjs/intl-listformat"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://img.shields.io/npm/v/@formatjs/intl-listformat.svg?style=flat-square",alt:"npm Version"}))),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-listformat",alt:"size"}))),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(l.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm i @formatjs/intl-listformat\n"))),Object(i.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add @formatjs/intl-listformat\n")))),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("p",null,"If you're supporting IE11-, this requires ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/polyfills/intl-getcanonicallocales"}),Object(i.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales")),"."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h3",{id:"simple"},"Simple"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import '@formatjs/intl-listformat/polyfill'\nimport '@formatjs/intl-listformat/locale-data/en' // locale-data for en\n")),Object(i.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import {shouldPolyfill} from '@formatjs/intl-listformat/should-polyfill'\nasync function polyfill(locale: string) {\n  // This platform already supports Intl.ListFormat\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-listformat/polyfill')\n  }\n\n  if (Intl.ListFormat.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-listformat/locale-data/en')\n        break\n\n      case 'fr':\n        await import('@formatjs/intl-listformat/locale-data/fr')\n        break\n    }\n  }\n}\n")),Object(i.b)("h2",{id:"tests"},"Tests"),Object(i.b)("p",null,"This library is fully ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/tc39/test262/tree/master/test/intl402/ListFormat"}),"test262"),"-compliant."))}p.isMDXComponent=!0}}]);