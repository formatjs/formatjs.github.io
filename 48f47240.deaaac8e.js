(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{120:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return d}));var n=a(0),l=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},b=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),b=n,d=m["".concat(r,".").concat(b)]||m[b]||u[b]||i;return a?l.a.createElement(d,o(o({ref:t},c),{},{components:a})):l.a.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var c=2;c<i;c++)r[c]=a[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},121:function(e,t,a){"use strict";function n(e){var t,a,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(l&&(l+=" "),l+=a);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}t.a=function(){for(var e,t,a=0,l="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(l&&(l+=" "),l+=t);return l}},122:function(e,t,a){"use strict";var n=a(0),l=a(123);t.a=function(){const e=Object(n.useContext)(l.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},123:function(e,t,a){"use strict";var n=a(0);const l=Object(n.createContext)(void 0);t.a=l},124:function(e,t,a){"use strict";var n=a(0),l=a.n(n),i=a(122),r=a(121),o=a(54),s=a.n(o);const c=37,p=39;t.a=function(e){const{lazy:t,block:a,defaultValue:o,values:m,groupId:u,className:b}=e,{tabGroupChoices:d,setTabGroupChoices:f}=Object(i.a)(),[y,j]=Object(n.useState)(o),O=n.Children.toArray(e.children);if(null!=u){const e=d[u];null!=e&&e!==y&&m.some((t=>t.value===e))&&j(e)}const h=e=>{j(e),null!=u&&f(u,e)},v=[];return l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":a},b)},m.map((({value:e,label:t})=>l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===e,className:Object(r.a)("tabs__item",s.a.tabItem,{"tabs__item--active":y===e}),key:e,ref:e=>v.push(e),onKeyDown:e=>{((e,t,a)=>{switch(a.keyCode){case p:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(v,e.target,e)},onFocus:()=>h(e),onClick:()=>{h(e)}},t)))),t?Object(n.cloneElement)(O.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):l.a.createElement("div",{className:"margin-vert--md"},O.map(((e,t)=>Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}},125:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function({children:e,hidden:t,className:a}){return l.a.createElement("div",{role:"tabpanel",hidden:t,className:a},e)}},82:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return u}));var n=a(3),l=a(7),i=(a(0),a(120)),r=a(124),o=a(125),s={id:"intl-displaynames",title:"Intl.DisplayNames"},c={unversionedId:"polyfills/intl-displaynames",id:"polyfills/intl-displaynames",isDocsHomePage:!1,title:"Intl.DisplayNames",description:"A polyfill for Intl.DisplayNames.",source:"@site/docs/polyfills/intl-displaynames.md",slug:"/polyfills/intl-displaynames",permalink:"/docs/polyfills/intl-displaynames",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-displaynames.md",version:"current",sidebar:"polyfills",previous:{title:"Intl.DateTimeFormat (ESNext)",permalink:"/docs/polyfills/intl-datetimeformat"},next:{title:"Intl.getCanonicalLocales",permalink:"/docs/polyfills/intl-getcanonicallocales"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Features",id:"features",children:[]},{value:"Usage",id:"usage",children:[{value:"Via polyfill.io",id:"via-polyfillio",children:[]},{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]}],m={toc:p};function u(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A polyfill for ",Object(i.b)("a",{parentName:"p",href:"https://tc39.es/proposal-intl-displaynames"},Object(i.b)("inlineCode",{parentName:"a"},"Intl.DisplayNames")),"."),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.org/package/@formatjs/intl-displaynames"},Object(i.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@formatjs/intl-displaynames.svg?style=flat-square",alt:"npm Version"})),"\n",Object(i.b)("img",{parentName:"p",src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-displaynames",alt:"size"})),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)(r.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"npm i @formatjs/intl-displaynames\n"))),Object(i.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @formatjs/intl-displaynames\n")))),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales"},Object(i.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales"))," or ",Object(i.b)("a",{parentName:"li",href:"/docs/polyfills/intl-getcanonicallocales"},"polyfill")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale"},Object(i.b)("inlineCode",{parentName:"a"},"Intl.Locale"))," or ",Object(i.b)("a",{parentName:"li",href:"/docs/polyfills/intl-locale"},"polyfill"),".")),Object(i.b)("h2",{id:"features"},"Features"),Object(i.b)("p",null,"Everything in ",Object(i.b)("a",{parentName:"p",href:"https://github.com/tc39/proposal-intl-displaynames"},"https://github.com/tc39/proposal-intl-displaynames"),"."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h3",{id:"via-polyfillio"},"Via polyfill.io"),Object(i.b)("p",null,"You can use ",Object(i.b)("a",{parentName:"p",href:"https://polyfill.io/v3/url-builder/"},"polyfill.io URL Builder")," to create a polyfill script tag for ",Object(i.b)("inlineCode",{parentName:"p"},"Intl.DisplayNames"),". By default the created URL does not come with any locale data. In order to add locale data, append ",Object(i.b)("inlineCode",{parentName:"p"},"Intl.DisplayNames.~locale.<locale>")," to your list of features. For example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Polyfill Intl.DisplayNames, its dependencies & `en` locale data --\x3e\n<script src="https://polyfill.io/v3/polyfill.min.js?features=Intl.DisplayNames,Intl.DisplayNames.~locale.en"><\/script>\n')),Object(i.b)("h3",{id:"simple"},"Simple"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-tsx"},"import '@formatjs/intl-displaynames/polyfill'\nimport '@formatjs/intl-displaynames/locale-data/en' // locale-data for en\n")),Object(i.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-tsx"},"import {shouldPolyfill} from '@formatjs/intl-displaynames/should-polyfill'\nasync function polyfill(locale: string) {\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-displaynames/polyfill')\n  }\n\n  if (Intl.DisplayNames.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-displaynames/locale-data/en')\n        break\n      case 'fr':\n        await import('@formatjs/intl-displaynames/locale-data/fr')\n        break\n    }\n  }\n}\n")))}u.isMDXComponent=!0}}]);