(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{107:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var l=n(0),a=n.n(l);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),f=l,m=p["".concat(i,".").concat(f)]||p[f]||b[f]||r;return n?a.a.createElement(m,o(o({ref:t},s),{},{components:n})):a.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},108:function(e,t,n){"use strict";function l(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=l(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=l(e))&&(a&&(a+=" "),a+=t);return a}},109:function(e,t,n){"use strict";var l=n(0);const a=Object(l.createContext)(void 0);t.a=a},110:function(e,t,n){"use strict";var l=n(0),a=n(109);t.a=function(){const e=Object(l.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},111:function(e,t,n){"use strict";var l=n(0),a=n.n(l),r=n(110),i=n(108),o=n(48),c=n.n(o);const s=37,u=39;t.a=function(e){const{block:t,children:n,defaultValue:o,values:p,groupId:b}=e,{tabGroupChoices:f,setTabGroupChoices:m}=Object(r.a)(),[d,y]=Object(l.useState)(o),[j,O]=Object(l.useState)(!1);if(null!=b){const e=f[b];null!=e&&e!==d&&p.some(t=>t.value===e)&&y(e)}const g=e=>{y(e),null!=b&&m(b,e)},h=[],v=e=>{e.metaKey||e.altKey||e.ctrlKey||O(!0)},w=()=>{O(!1)};return Object(l.useEffect)(()=>{window.addEventListener("keydown",v),window.addEventListener("mousedown",w)},[]),a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},p.map(({value:e,label:t})=>a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":d===e,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":d===e}),style:j?{}:{outline:"none"},key:e,ref:e=>h.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case u:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case s:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(h,e.target,e),v(e)},onFocus:()=>g(e),onClick:()=>{g(e),O(!1)},onPointerDown:()=>O(!1)},t))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},l.Children.toArray(n).filter(e=>e.props.value===d)[0]))}},112:function(e,t,n){"use strict";var l=n(0),a=n.n(l);t.a=function(e){return a.a.createElement("div",null,e.children)}},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return b}));var l=n(2),a=n(6),r=(n(0),n(107)),i=n(111),o=n(112),c={id:"intl-pluralrules",title:"Intl.PluralRules"},s={unversionedId:"polyfills/intl-pluralrules",id:"polyfills/intl-pluralrules",isDocsHomePage:!1,title:"Intl.PluralRules",description:"A spec-compliant polyfill for Intl.PluralRules fully tested by the official ECMAScript Conformance test suite",source:"@site/docs/polyfills/intl-pluralrules.md",permalink:"/docs/polyfills/intl-pluralrules",editUrl:"https://github.com/formatjs/formatjs/edit/main/website/docs/polyfills/intl-pluralrules.md",sidebar:"polyfills",previous:{title:"Intl.getCanonicalLocales",permalink:"/docs/polyfills/intl-getcanonicallocales"},next:{title:"Intl.RelativeTimeFormat",permalink:"/docs/polyfills/intl-relativetimeformat"}},u=[{value:"Installation",id:"installation",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[{value:"Simple",id:"simple",children:[]},{value:"Dynamic import + capability detection",id:"dynamic-import--capability-detection",children:[]}]}],p={rightToc:u};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(l.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A spec-compliant polyfill for ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules"}),Object(r.b)("inlineCode",{parentName:"a"},"Intl.PluralRules"))," fully tested by the ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"https://github.com/tc39/test262"}),"official ECMAScript Conformance test suite")),Object(r.b)("p",null,Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"https://www.npmjs.org/package/@formatjs/intl-pluralrules"}),Object(r.b)("img",Object(l.a)({parentName:"a"},{src:"https://img.shields.io/npm/v/@formatjs/intl-pluralrules.svg?style=flat-square",alt:"npm Version"}))),"\n",Object(r.b)("img",Object(l.a)({parentName:"p"},{src:"https://badgen.net/bundlephobia/minzip/@formatjs/intl-pluralrules",alt:"size"}))),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)(i.a,{groupId:"npm",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"yarn",value:"yarn"}],mdxType:"Tabs"},Object(r.b)(o.a,{value:"npm",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-sh"}),"npm i @formatjs/intl-pluralrules\n"))),Object(r.b)(o.a,{value:"yarn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-sh"}),"yarn add @formatjs/intl-pluralrules\n")))),Object(r.b)("h2",{id:"requirements"},"Requirements"),Object(r.b)("p",null,"If you're supporting IE11-, this requires ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"/docs/polyfills/intl-getcanonicallocales"}),Object(r.b)("inlineCode",{parentName:"a"},"Intl.getCanonicalLocales")),"."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("h3",{id:"simple"},"Simple"),Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-tsx"}),"import '@formatjs/intl-pluralrules/polyfill'\nimport '@formatjs/intl-pluralrules/locale-data/en' // locale-data for en\n")),Object(r.b)("h3",{id:"dynamic-import--capability-detection"},"Dynamic import + capability detection"),Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-tsx"}),"import {shouldPolyfill} from '@formatjs/intl-pluralrules/should-polyfill'\nasync function polyfill(locale: string) {\n  if (shouldPolyfill()) {\n    // Load the polyfill 1st BEFORE loading data\n    await import('@formatjs/intl-pluralrules/polyfill')\n  }\n\n  if (Intl.PluralRules.polyfilled) {\n    switch (locale) {\n      default:\n        await import('@formatjs/intl-pluralrules/locale-data/en')\n        break\n      case 'fr':\n        await import('@formatjs/intl-pluralrules/locale-data/fr')\n        break\n    }\n  }\n}\n")))}b.isMDXComponent=!0}}]);