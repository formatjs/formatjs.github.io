(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),d=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(n),b=a,u=p["".concat(o,".").concat(b)]||p[b]||m[b]||i;return n?r.a.createElement(u,s(s({ref:t},l),{},{components:n})):r.a.createElement(u,s({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),i=(n(0),n(102)),o={id:"message-extraction",title:"Message Extraction"},s={unversionedId:"getting-started/message-extraction",id:"getting-started/message-extraction",isDocsHomePage:!1,title:"Message Extraction",description:"Now that you've declared some messages, it's time to extract them.",source:"@site/docs/getting-started/message-extraction.md",permalink:"/docs/getting-started/message-extraction",editUrl:"https://github.com/formatjs/formatjs/edit/master/website/docs/getting-started/message-extraction.md",sidebar:"docs",previous:{title:"Message Declaration",permalink:"/docs/getting-started/message-declaration"},next:{title:"Message Distribution",permalink:"/docs/getting-started/message-distribution"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Extraction",id:"extraction",children:[]}],l={rightToc:c};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Now that you've declared some messages, it's time to extract them."),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm i -D @formatjs/cli\n")),Object(i.b)("h2",{id:"extraction"},"Extraction"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),'formatjs extract "src/**/*.ts*" --out-file lang/en.json\n')),Object(i.b)("p",null,"Given a file that has the following messages:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),"import * as React from 'react';\nimport {FormattedMessage, useIntl, injectIntl} from 'react-intl';\n\nclass PasswordChangeWithIntl extends React.Component {\n  render() {\n    const {intl} = this.props;\n    return (\n      <li>\n        <input\n          placeholder={intl.formatMessage({\n            defaultMessage: 'New Password',\n            description: 'placeholder text',\n          })}\n        />\n        <input\n          placeholder={intl.formatMessage({\n            id: 'explicit-id',\n            defaultMessage: 'Confirm Password',\n            description: 'placeholder text',\n          })}\n        />\n      </li>\n    );\n  }\n}\n\nconst PasswordChange = injectIntl(PasswordChangeWithIntl);\n\nexport function List(props) {\n  const intl = useIntl();\n  return (\n    <section>\n      <header>\n        <FormattedMessage\n          defaultMessage=\"Control Panel\"\n          description=\"title of control panel section\"\n        />\n      </header>\n      <ul>\n        <li>\n          <button>\n            <FormattedMessage\n              defaultMessage=\"Delete user {name}\"\n              description=\"Delete button\"\n              values={{\n                name: props.name,\n              }}\n            />\n          </button>\n        </li>\n        <PasswordChange />\n      </ul>\n    </section>\n  );\n}\n")),Object(i.b)("p",null,"running the above command will create a file called ",Object(i.b)("inlineCode",{parentName:"p"},"lang/en.json"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "hak27d",\n    "defaultMessage": "Control Panel",\n    "description": "title of control panel section"\n  },\n  {\n    "id": "haqsd",\n    "defaultMessage": "Delete user {name}",\n    "description": "delete button"\n  },\n  {\n    "id": "19hjs",\n    "defaultMessage": "New Password",\n    "description": "placeholder text"\n  },\n  {\n    "id": "explicit-id",\n    "defaultMessage": "Confirm Password",\n    "description": "placeholder text"\n  }\n]\n')),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"File Format")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The format of this file is meant to be verbose for translation purposes, not for direct consumption of ",Object(i.b)("inlineCode",{parentName:"p"},"react-intl"),"."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Message ID")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"During extraction, we'll preserve explicit declared IDs and insert a hash as an ID for messages without. We recommend against explicit IDs since it can cause collision."))))}d.isMDXComponent=!0}}]);